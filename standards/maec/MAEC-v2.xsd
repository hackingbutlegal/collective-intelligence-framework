<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
	attributeFormDefault="unqualified" xmlns:maec="http://maec.mitre.org/XMLSchema/maec-core-2"
	targetNamespace="http://maec.mitre.org/XMLSchema/maec-core-2"
	xmlns:metadata="http://xml/metadataSharing.xsd"
	xmlns:cybox="http://cybox.mitre.org/XMLSchema/cybox_v0.7"
	xmlns:URIObj="http://cybox.mitre.org/XMLSchema/objects#URIObject"
	xmlns:SystemObj="http://cybox.mitre.org/XMLSchema/objects#SystemObject"
	xmlns:WinSystemObj="http://cybox.mitre.org/XMLSchema/objects#WinSystemObject" version="2.0">
	<xs:import namespace="http://xml/metadataSharing.xsd"
		schemaLocation="http://grouper.ieee.org/groups/malware/malwg/Schema1.2/metadataSharing.xsd"/>
	<xs:import namespace="http://cybox.mitre.org/XMLSchema/cybox_v0.7"
		schemaLocation="http://cybox.mitre.org/XMLSchema/CybOX_v0.7.xsd"/>
	<xs:annotation>
		<xs:documentation>The following is a description of the elements, types, and attributes that compose Malware Attribute Enumeration and Characterization (MAEC).</xs:documentation>
		<xs:documentation>The MAEC Schema is maintained by The Mitre Corporation. For more information, including how to get involved in the project, please visit the MAEC website at http://maec.mitre.org.</xs:documentation>
		<xs:documentation>This schema imports the IEEE ICSG's Malware Metadata schema. More info on this schema can be found at http://grouper.ieee.org/groups/malware/malwg/Schema1.2/.</xs:documentation>
		<xs:documentation>This schema imports the CyBOX schema and object schemas. More info on CybOX can be found at http://cybox.mitre.org.</xs:documentation>
		<xs:appinfo>
			<schema>MAEC</schema>
			<version>2.0</version>
			<date>01/26/2012</date>
			<terms_of_use>Copyright (c) 2012, The MITRE Corporation. All rights reserved.  The contents of this file are subject to the terms of the MAEC License located at http://maec.mitre.org/about/termsofuse.html. See the MAEC License for the specific language governing permissions and limitations for use of this schema.  When distributing copies of the MAEC Schema, this license header must be included.</terms_of_use>
		</xs:appinfo>
	</xs:annotation>
	<xs:import namespace="http://cybox.mitre.org/XMLSchema/objects#SystemObject"
		schemaLocation="http://cybox.mitre.org/XMLSchema/objects/System_Object.xsd"/>
	<xs:import namespace="http://cybox.mitre.org/XMLSchema/objects#URIObject"
		schemaLocation="http://cybox.mitre.org/XMLSchema/objects/URI_Object.xsd"/>
	<xs:element name="MAEC_Bundle" type="maec:BundleType">
		<xs:annotation>
			<xs:documentation>The MAEC_Bundle element is the root element of this schema, and is of type BundleType. As such, it represents the standard MAEC output format, and is a collection of all other MAEC elements.</xs:documentation>
		</xs:annotation>
		<xs:key name="analysisKey">
			<xs:annotation>
				<xs:documentation>Enforce uniqueness amongst the ids differentiating the individual analysis elements.</xs:documentation>
			</xs:annotation>
			<xs:selector xpath="maec:Analyses/*"/>
			<xs:field xpath="@id"/>
		</xs:key>
		<xs:key name="behaviorKey">
			<xs:annotation>
				<xs:documentation>Enforce uniqueness amongst the ids differentiating the individual behavior elements.</xs:documentation>
			</xs:annotation>
			<xs:selector xpath="maec:Behaviors/*"/>
			<xs:field xpath="@id"/>
		</xs:key>
		<xs:key name="actionKey">
			<xs:annotation>
				<xs:documentation>Enforce uniqueness amongst the ids differentiating the individual action elements.</xs:documentation>
			</xs:annotation>
			<xs:selector xpath="maec:Actions/*"/>
			<xs:field xpath="@id"/>
		</xs:key>
		<xs:key name="objectKey">
			<xs:annotation>
				<xs:documentation>Enforce uniqueness amongst the ids differentiating the individual object elements.</xs:documentation>
			</xs:annotation>
			<xs:selector xpath="maec:Objects/*"/>
			<xs:field xpath="@id"/>
		</xs:key>
		<xs:key name="indicatorKey">
			<xs:annotation>
				<xs:documentation>Enforce uniqueness amongst the ids differentiating the individual indicator elements.</xs:documentation>
			</xs:annotation>
			<xs:selector xpath="maec:Indicators/*"/>
			<xs:field xpath="@id"/>
		</xs:key>
		<xs:key name="behaviorCollectionKey">
			<xs:annotation>
				<xs:documentation>Enforce uniqueness amongst the ids differentiating the individual behavior collection elements.</xs:documentation>
			</xs:annotation>
			<xs:selector xpath="maec:Pools/maec:Behavior_Collection_Pool/*"/>
			<xs:field xpath="@id"/>
		</xs:key>
		<xs:key name="actionCollectionKey">
			<xs:annotation>
				<xs:documentation>Enforce uniqueness amongst the ids differentiating the individual action collection elements.</xs:documentation>
			</xs:annotation>
			<xs:selector xpath="maec:Pools/maec:Action_Collection_Pool/*"/>
			<xs:field xpath="@id"/>
		</xs:key>
		<xs:key name="objectCollectionKey">
			<xs:annotation>
				<xs:documentation>Enforce uniqueness amongst the ids differentiating the individual object collection elements.</xs:documentation>
			</xs:annotation>
			<xs:selector xpath="maec:Pools/maec:Object_Collection_Pool/*"/>
			<xs:field xpath="@id"/>
		</xs:key>
		<xs:key name="indicatorCollectionKey">
			<xs:annotation>
				<xs:documentation>Enforce uniqueness amongst the ids differentiating the individual indicator collection elements.</xs:documentation>
			</xs:annotation>
			<xs:selector xpath="maec:Pools/maec:Indicator_Collection_Pool/*"/>
			<xs:field xpath="@id"/>
		</xs:key>
	</xs:element>
	<xs:element name="Object" type="maec:ObjectType">
		<xs:annotation>
			<xs:documentation>The Object element identifies and specificies the characteristics of a specific cyber-relevant object (e.g. a file, a registry key or a process). This element must be used in plaec of the cybox:Object element in order to use the MAEC defined object type.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Action" type="maec:ActionType">
		<xs:annotation>
			<xs:documentation>The Action element enables description/specification of a single malware action. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Behavior" type="maec:BehaviorType">
		<xs:annotation>
			<xs:documentation>The Behavior element enables description/specification of a single malware behavior. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Indicator" type="maec:IndicatorType">
		<xs:annotation>
			<xs:documentation>The Indicator element enables description/specification of a single malware indicator. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="ActionType">
		<xs:annotation>
			<xs:documentation>The ActionType complex type is one of the foundational MAEC types, and serves as a method for the characterization of actions found or observed in malware. Actions can be thought of as system state changes and similar operations that represent the fundamental low-level operation of malware. Some examples include the creation of a file, deletion of a registry key, and the sending of some  data on a socket.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="cybox:ActionType">
				<xs:sequence>
					<xs:element minOccurs="0" name="Implementation"
						type="maec:ActionImplementationType">
						<xs:annotation>
							<xs:documentation>The Implementation element is optional and serves to capture attributes that are relevant to how the action is actually implemented in the malware, such as the specific API call used.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="0" name="Associated_Objects">
						<xs:annotation>
							<xs:documentation>The Associated_Objects element is optional and enables the description/specification of other objects relevant (either initiating or affected by) to this malware Action. This element must be used in place of the CybOX Associated_Objects element in order to use the MAEC object type.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence maxOccurs="1">
								<xs:element name="Associated_Object"
									type="maec:AssociatedObjectType" maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="id" type="maec:ActionIDPattern">
					<xs:annotation>
						<xs:documentation>The id attribute specifies a unique ID for this MAEC Action. The ID must follow the pattern defined in the ActionIDPattern simple type. This attribute must be used in place of the CybOX ID attribute in order to use the proper MAEC ID pattern.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="idref" type="maec:ActionIDPattern">
					<xs:annotation>
						<xs:documentation>The idref attribute specifies a reference to a unique ID for this MAEC Action. The ID must follow the pattern defined in the ActionIDPattern simple type. This attribute must be used in place of the CybOX IDREF attribute in order to use the proper MAEC ID pattern.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BehaviorType">
		<xs:annotation>
			<xs:documentation>The BehaviorType complex type is one of the MAEC foundational types, and serves as a method for the characterization of malicious behaviors found or observed in malware. Behaviors can be thought of as representing the purpose behind groups of MAEC actions, and are therefore representative of distinct portions of higher-level malware functionality. Thus, while a malware instance may perform some multitude of actions, it is likely that these actions represent only a few distinct behaviors. Some examples include vulnerability exploitation, email address harvesting, and the disabling of a security service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Purpose">
				<xs:annotation>
					<xs:documentation>The Purpose element encompasses the intended purpose of the behavior. Since
						a behavior is not always successful, and may not be fully observed, this is
						meant as way to state the nature of the behavior apart from its constituent
						actions.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="Description" type="xs:string">
							<xs:annotation>
								<xs:documentation>This element contains a prose text description of the purpose of the behavior, whether it was successful or not.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element minOccurs="0" name="Vulnerability_Exploit">
							<xs:annotation>
								<xs:documentation>This element contains a CVE identifier for specifying a vulnerability that a behavior may have attempted to exploit, and was either unsuccessful or the success of the exploitation is unknown. Note that this is more or less a placeholder for future attributes in this vein, as behaviors can certainly do much more than vulnerability exploitation.  </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="maec:CVEVulnerabilityType">
										<xs:attribute name="known_vulnerability" type="xs:boolean">
											<xs:annotation>
												<xs:documentation>The known_vulnerability attribute specifies whether or not the exploited targeted by the behavior was known or not. An unknown vulnerability is commonly characterized as a '0-day'.</xs:documentation>
											</xs:annotation>
										</xs:attribute>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Description" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Description element contains a prose textual description of the
						behavior.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Discovery_Method" type="cybox:MeasureSourceType">
				<xs:annotation>
					<xs:documentation>The Discovery_Method element is used to characterize the method used to discover the behavior.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Associated_Code">
				<xs:annotation>
					<xs:documentation>The Associated_Code element encompasses any code snippets that may be associated with the behavior.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" name="Code_Snippet" type="maec:CodeType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Actions">
				<xs:annotation>
					<xs:documentation>The Actions element encompasses the action or actions that constitute the behavior.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice maxOccurs="unbounded">
						<xs:element minOccurs="1" name="Action_Collection"
							type="maec:ActionCollectionType"/>
						<xs:element minOccurs="1" name="Action">
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="maec:ActionType">
										<xs:attribute name="behavioral_ordering"
											type="xs:positiveInteger">
											<xs:annotation>
												<xs:documentation>The behavioral_ordering attribute defines the ordering of the action with respect to the other actions that make up the behavior. So an action with a behavioral_ordering of "1" would come before an action with a behavioral_ordering of "2", etc.</xs:documentation>
											</xs:annotation>
										</xs:attribute>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Relationships">
				<xs:annotation>
					<xs:documentation>The Relationships element is optional and enables the description of other behaviors that are related to this malware Behavior.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" name="Relationship"
							type="maec:BehaviorRelationshipType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" use="optional" type="maec:BehaviorIDPattern">
			<xs:annotation>
				<xs:documentation>The id attribute specifies a unique ID for this MAEC Behavior. The ID must follow the pattern defined in the BehaviorIDPattern simple type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="idref" type="maec:BehaviorIDREFPattern">
			<xs:annotation>
				<xs:documentation>The idref attribute specifies a reference to a unique ID for this MAEC Behavior. The ID must follow the pattern defined in the BehaviorIDREFPattern simple type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="ordinal_position" type="xs:positiveInteger">
			<xs:annotation>
				<xs:documentation>The ordinal_position attribute specifies the ordinal position of the behavior with respect to the execution of the malware.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="status" type="cybox:ActionStatusTypeEnum">
			<xs:annotation>
				<xs:documentation>The status attribute is used to describe the status of the behavior being characterized.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="duration" type="xs:duration">
			<xs:annotation>
				<xs:documentation>The duration attribute represents the duration of the behavior. Such a value may be derived by calculating the difference between the timestamps of the first and last actions that compose the behavior.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="BundleType">
		<xs:annotation>
			<xs:documentation>The BundleType complex type serves as the high-level construct which encapsulates all other MAEC elements. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Analyses">
				<xs:annotation>
					<xs:documentation>The Analyses element contains 1-n AnalysisType objects, representing any analyses performed on a piece of malware.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" name="Analysis" type="maec:AnalysisType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Behaviors">
				<xs:annotation>
					<xs:documentation>The Behaviors element contains 1-n BehaviorType objects, representing any malicious behaviors that were observed for a malware instance. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" name="Behavior" type="maec:BehaviorType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Actions">
				<xs:annotation>
					<xs:documentation>The Actions element contains 1-n ActionType objects, representing any actions that were observed for a malware instance.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" name="Action" type="maec:ActionType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Objects">
				<xs:annotation>
					<xs:documentation>The Objects element contains 1-n ObjectType objects, representing any objects associated with a malware instance.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" name="Object" type="maec:ObjectType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Indicators">
				<xs:annotation>
					<xs:documentation>The Indicators element contains 1-n IndicatorType objects, representing any malware indicators that were characterized.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="1" name="Indicator"
							type="maec:IndicatorType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Collections">
				<xs:annotation>
					<xs:documentation>The Collections element contains the collection element types for Behaviors, Actions, Objects, and Indicators.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="Behavior_Collections">
							<xs:complexType>
								<xs:sequence>
									<xs:element maxOccurs="unbounded" name="Behavior_Collection"
										type="maec:BehaviorCollectionType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element minOccurs="0" name="Action_Collections">
							<xs:complexType>
								<xs:sequence>
									<xs:element maxOccurs="unbounded" name="Action_Collection"
										type="maec:ActionCollectionType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element minOccurs="0" name="Object_Collections">
							<xs:complexType>
								<xs:sequence>
									<xs:element maxOccurs="unbounded" name="Object_Collection"
										type="maec:ObjectCollectionType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element minOccurs="0" name="Indicator_Collections">
							<xs:complexType>
								<xs:sequence>
									<xs:element maxOccurs="unbounded" name="Indicator_Collection"
										type="maec:IndicatorCollectionType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" use="optional" type="maec:BundleIDPattern">
			<xs:annotation>
				<xs:documentation>The id attribute specifies a unique ID for this MAEC Bundle. The ID must follow the pattern defined in the BundleIDPattern simple type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="schema_version" type="xs:decimal" use="required" fixed="2.0">
			<xs:annotation>
				<xs:documentation>The required schema_version attribute specifies the version of the MAEC Schema that the document has been written in and that should be used for validation.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="timestamp" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>The timestamp attribute specifies the date/time that the bundle was generated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="BehaviorCollectionType">
		<xs:annotation>
			<xs:documentation>The BehaviorCollectionType complex type provides a mechanism for characterizing collections of behaviors.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="maec:BaseCollectionType">
				<xs:sequence>
					<xs:element name="Purpose" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The Purpose element states the intended purpose of the collection of behaviors. Since
						behaviors are not always successful, and may not be fully observed, this is
						meant as way of absracting the nature of the collection of behaviors away  from its constituent
						actions.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice maxOccurs="unbounded">
						<xs:element name="Behavior_Sub_Collection"
							type="maec:BehaviorCollectionType" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Behavior_Sub-Collection element specifies a sub-collection of MAEC Behaviors in the collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Behavior" type="maec:BehaviorType" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Behavior element specifies a single MAEC Behavior in the collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="id" use="optional" type="maec:BehaviorCollIDPattern">
					<xs:annotation>
						<xs:documentation>The id attribute specifies a unique ID for this MAEC Behavior Collection. The ID must follow the pattern defined in the BehaviorCollIDPattern simple type. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ActionCollectionType">
		<xs:annotation>
			<xs:documentation>The ActionCollectionType complex type provides a method for characterizing collections of actions. This can be useful for organizing actions that may be related and where the exact relationship is unknown, as well as actions whose associated behavior has not yet been established.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="maec:BaseCollectionType">
				<xs:sequence>
					<xs:choice maxOccurs="unbounded">
						<xs:element name="Action_Sub-Collection" type="maec:ActionCollectionType"
							minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Action_Sub-Collection element specifies a sub-collection of MAEC Actions in the collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Action" type="maec:ActionType" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Action element specifies a single MAEC Action in the colleciton.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="id" use="optional" type="maec:ActionCollIDPattern">
					<xs:annotation>
						<xs:documentation>The id attribute specifies a unique ID for this MAEC Action Collection. The ID must follow the pattern defined in the ActionCollIDPattern simple type. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ObjectType">
		<xs:annotation>
			<xs:documentation>The ObjectType complex type provides a method for the characterization of any observable entities that actions and behaviors operate on or are associated with. Some examples would be a file or an IP address. This type imports and extends the CybOX ObjectType.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="cybox:ObjectType">
				<xs:sequence>
					<xs:element minOccurs="0" name="Detected_By">
						<xs:annotation>
							<xs:documentation>The Detected_By element references any indicators or tools that may have been used to detect the object.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:choice maxOccurs="unbounded">
								<xs:element name="Indicator" type="maec:IndicatorType"/>
								<xs:element name="Tool" type="cybox:ToolInformationType"/>
							</xs:choice>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="AV_Detections">
						<xs:annotation>
							<xs:documentation>The AV_Detections element references any Anti-Virus (AV) tool classifications of the object.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" name="AV_Detection"
									type="metadata:classificationObject"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="Related_Objects">
						<xs:annotation>
							<xs:documentation>The Related_Objects element characterizes any relationships to other MAEC objects. This element must be used in place of the CybOX Related_Objects element in order to use the MAEC object type.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence maxOccurs="1" minOccurs="1">
								<xs:element name="Related_Object" type="maec:RelatedObjectType"
									maxOccurs="unbounded"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" name="Code_Snippets">
						<xs:annotation>
							<xs:documentation>The Code_Snippets element encompasses any code snippets that may have been extracted from the object.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" name="Code_Snippet"
									type="maec:CodeType"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="id" type="maec:ObjectIDPattern">
					<xs:annotation>
						<xs:documentation>The id attribute specifies a unique ID for this MAEC Object. The ID must follow the pattern defined in the ObjectIDPattern simple type. This attribute must be used in place of the CybOX ID attribute in order to use the proper MAEC ID pattern.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="idref" type="maec:ObjectIDPattern">
					<xs:annotation>
						<xs:documentation>The id attribute specifies a reference to a unique ID for this MAEC Object. The ID must follow the pattern defined in the ObjectIDPattern simple type. This attribute must be used in place of the CybOX IDREF attribute in order to use the proper MAEC ID pattern.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="APICallType">
		<xs:annotation>
			<xs:documentation>The APICallType complex type provides a method for the  characterization of API calls, including functions and their parameters.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Address" type="xs:hexBinary" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Address element contains the address of the API call in the binary.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Return_Value" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Return_Value element contains the return value of the API call.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Parameters">
				<xs:annotation>
					<xs:documentation>The Parameter element encompasses any name/value pairs of the parameters passed into the API call.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" name="Parameter">
							<xs:annotation>
								<xs:documentation/>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="ordinal_position" type="xs:positiveInteger">
									<xs:annotation>
										<xs:documentation>This attribute refers to the ordinal position of the API function call parameter with respect to the function itself.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="name" type="xs:string"/>
								<xs:attribute name="value" type="xs:string"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="function_name" type="xs:string">
			<xs:annotation>
				<xs:documentation>The function_name attribute contains the exact name of the API function called, e.g. CreateFileEx.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="normalized_function_name" type="xs:string">
			<xs:annotation>
				<xs:documentation>The normalized_function_name attribute contains the normalized name of the API function called, e.g. CreateFile.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ActionImplementationType">
		<xs:annotation>
			<xs:documentation>The ActionImplementationType complex type serves as a method for the characterization of action implementations. Currently supported are implementations achieved through API function calls and abstractly defined code.
		</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Platform" type="cybox:CPESpecificationType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Platform element contains a specific platform(s) for which the action implementation is applicable, by way of a Common Platform Enumeration (CPE) identifier. For more information on CPE, go to http://cpe.mitre.org.

For now this is more a placeholder than anything, since an action implementation can clearly be applicable to more than a single platform. With future releases of CPE we will have ability to cover the full range of platforms that an action implementation is tied into.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="API_Call" maxOccurs="1" minOccurs="0" type="maec:APICallType">
					<xs:annotation>
						<xs:documentation>The API_Call element allows for the characterization of a system-level API call that was used to implement the action. Software must make use of such calls to talk to 			hardware and perform system-specific functions.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Code" maxOccurs="unbounded" type="maec:CodeType" minOccurs="0">
					<xs:annotation>
						<xs:documentation>The Code element contains any form of code that was used to implement the action.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="id" use="optional" type="maec:ActionImpIDPattern">
			<xs:annotation>
				<xs:documentation>The id attribute specifies a unique ID for this MAEC Action Implementation. The ID must follow the pattern defined in the ActionImpIDPattern simple type. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" use="optional" type="maec:ActionImpTypeEnum">
			<xs:annotation>
				<xs:documentation>The type attribute refers to the type of action implementation being characterized in this element. </xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="AnalysisType">
		<xs:annotation>
			<xs:documentation>The AnalysisType complex type provides a way of encapsulating typical information associated with the analysis of a malware instance, such as the subject, authors, start datetime, and other relevant data.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="1" name="Subject" type="maec:AnalysisSubjectType">
				<xs:annotation>
					<xs:documentation>The Subject element is intended to characterize the primary subject of the analysis. Typically this is a malware binary, either defined as a MAEC object (or object reference) or as a URL.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="Comments" type="maec:CommentsType">
				<xs:annotation>
					<xs:documentation>The Comments element contains any comments regarding the analysis that was performed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Summary" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Description element contains a summary of the analysis that was performed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Analysts" maxOccurs="1" type="cybox:PersonnelType">
				<xs:annotation>
					<xs:documentation>The Analysts element contains the analyst(s) who performed the analysis.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Analysis_Environment"
				type="maec:AnalysisEnvironmentType">
				<xs:annotation>
					<xs:documentation>The Analysis_Environment element contains attributes for characterizing the analysis environment in which the analysis was performed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Source" type="maec:SourceType">
				<xs:annotation>
					<xs:documentation>The Source element contains information about the external source of the analysis, if applicable.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element maxOccurs="1" minOccurs="0" name="Tools">
				<xs:annotation>
					<xs:documentation>The Tools element contains information about the tool(s) used in the analysis, either in the form of a new Tool element or a Tool_Reference.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence maxOccurs="1">
						<xs:element maxOccurs="unbounded" name="Tool"
							type="cybox:ToolInformationType" minOccurs="1"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Findings">
				<xs:annotation>
					<xs:documentation>The Findings element encompasses the behavioral, action, and object-oriented findings of the analysis via references to their corresponding MAEC constructs.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element minOccurs="0" name="Behaviors">
							<xs:annotation>
								<xs:documentation>The Behaviors element specifies any MAEC Behaviors that were observed for the analysis subect (defined in the Analysis_Subject element).</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element maxOccurs="unbounded" name="Behavior"
										type="maec:BehaviorType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element minOccurs="0" name="Actions">
							<xs:annotation>
								<xs:documentation>The Actions element specifies any MAEC Actions that were observed for the analysis subect (defined in the Analysis_Subject element).</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element maxOccurs="unbounded" name="Action"
										type="maec:ActionType"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Report" type="cybox:StructuredTextType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Report element contains the textual report regarding the analysis performed on the malware.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" form="unqualified" use="optional" type="maec:AnalysisIDPattern">
			<xs:annotation>
				<xs:documentation>The id attribute specifies a unique ID for this MAEC Analysis. The ID must follow the pattern defined in the AnalysisIDPattern simple type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="idref" type="maec:AnalysisIDPattern">
			<xs:annotation>
				<xs:documentation>The id attribute specifies a reference to a unique ID for this MAEC Analysis. The ID must follow the pattern defined in the AnalysisIDPattern simple type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" type="maec:AnalysisTypeEnum">
			<xs:annotation>
				<xs:documentation>The type attribute specifies the type of malware analysis being performed; possible values are either Triage or In-depth/Manual.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="method" type="maec:AnalysisMethodEnum">
			<xs:annotation>
				<xs:documentation>The method attribute is intended to provide a way of characterizing the type of analysis method used in the analysis element. Possible values: Static, Dynamic, Combinatorial. 'Combinatorial' refers to the use of both static and dynamic methods.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="start_datetime" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>The start_datetime attribute specifies the date/time the analysis was started.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="complete_datetime" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>The complete_datetime attribute specifies the date/time the analysis was completed.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="lastupdate_datetime" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>The lastupdate_datetime attribute specifies the date/time the analysis was last updated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="AnalysisEnvironmentType">
		<xs:annotation>
			<xs:documentation>The AnalysisEnvironmentType complex type provides mechanisms for characterizing the particular hardware/software environment used in analyzing a malware instance.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Host_System">
				<xs:annotation>
					<xs:documentation>The Host_System element characterizes the (physical) host system used in the analysis, typically in conjunction with a virtual machine. This element imports and extends the CybOX System Object.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="SystemObj:System_Object_Type">
							<xs:sequence>
								<xs:element minOccurs="0" name="Virtual_Machine"
									type="cybox:CPESpecificationType">
									<xs:annotation>
										<xs:documentation>The Virtual_Machine element refers to the virtual machine used to host the OS on which the analysis was performed, if applicable, via a Common Platform Enumeration (CPE) identifier. See http://cpe.mitre.org for more information on CPE.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Analysis_Systems">
				<xs:annotation>
					<xs:documentation>The Analysis_Systems element characterizes the system(s) (real or virtual) on which the actual analysis was performed, including information about both the hardware and software, such as the properties of its BIOS, processor architecture, and operating system. This element imports and extends the CybOX System Object.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element maxOccurs="unbounded" name="Analysis_System">
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="SystemObj:System_Object_Type">
										<xs:sequence>
											<xs:element minOccurs="0" name="Installed_Programs">
												<xs:annotation>
												<xs:documentation>The Installed_Programs element refers to information about the software installed on the OS used to perform the analysis. This can be useful for clarifying the nature of the analysis environment, for instance for determining whether an exploited piece of software was present, as well as for specifying any tools that may have been installed.</xs:documentation>
												</xs:annotation>
												<xs:complexType>
												<xs:sequence>
												<xs:element maxOccurs="unbounded" name="Program"
												type="cybox:CPESpecificationType"/>
												</xs:sequence>
												</xs:complexType>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CVEVulnerabilityType">
		<xs:annotation>
			<xs:documentation>The CVEVulnerabilityType complex type provides a way of referencing specific vulnerabilities that malware exploits or attempts to exploit via a Common Vulnerabilities and Exposures (CPE) identifier. For more information on CPE please see http://cpe.mitre.org. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Description" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Description contains the textual description of the vulnerability referenced by the cve_id.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="cve_id" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>The cve_id attribute contains the ID of the CVE that is being referenced. E.g. CVE-1999-0002.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ObjectCollectionType">
		<xs:annotation>
			<xs:documentation>The ObjectCollectionType complex type provides a mechanism for characterizing collections of actions. For instance, it can be used to group all of the actions that are associated with a specific behavior.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="maec:BaseCollectionType">
				<xs:sequence>
					<xs:choice maxOccurs="unbounded">
						<xs:element name="Object_Sub_Collection" type="maec:ObjectCollectionType"
							minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Object_Sub-Collection element specifies a sub-collection of MAEC Objects in the collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Object" type="maec:ObjectType" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Object element specifies a single MAEC object in the collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="id" use="optional" type="maec:ObjectCollIDPattern">
					<xs:annotation>
						<xs:documentation>The id attribute specifies a unique ID for this MAEC Object Collection. The ID must follow the pattern defined in the ObjectCollIDPattern simple type. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CodeType">
		<xs:annotation>
			<xs:documentation>CodeType is intended to provide a way of characterizing segments of code that are extracted or otherwise retrieved from malware.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Description" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Description element is intended for use in providing a brief description of the code that is encapsulated in this element.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Discovery_Method" type="cybox:MeasureSourceType">
				<xs:annotation>
					<xs:documentation>The Discovery_Method element is intended to characterize the method and/or tool used to discover the code.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Code_Segment" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Code_Segment element encompasses any arbitrary code segment in un-encoded (plaintext) format. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Code_Segment_XOR" type="xs:hexBinary" minOccurs="0" form="qualified">
				<xs:annotation>
					<xs:documentation>The Code_Segment_XOR element encompasses any arbitrary code segment of the type specified by the codetype attribute. Its contents should contain the actual code segment XORed with the pattern defined in the xorpattern attribute. This is so that the code contained in the pattern does not trigger IDS, AV, or other signature-based scanners.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" use="optional" type="maec:CodeIDPattern"/>
		<xs:attribute name="type">
			<xs:annotation>
				<xs:documentation>The type attribute is intended to provide a way of specifying the type of code being characterized.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="Shellcode"/>
					<xs:enumeration value="Exploit_Code"/>
					<xs:enumeration value="Unknown"/>
					<xs:enumeration value="Other"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="programming_language" type="maec:ProgrammingLanguageEnum">
			<xs:annotation>
				<xs:documentation>The programming_language attribute refers to the programming language used in the code characterized in this element. Possible values are: C, C++, C#, Java, JSP, Javascript, ASP.NET, SQL, Python, Perl, PHP, SOAP, Ruby, Shell, Pseudocode, .NET, Assembly, XML, HTML.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="start_address" type="xs:hexBinary">
			<xs:annotation>
				<xs:documentation>The start_address attribute can be used to reference the start address of the code, if it was discovered inside a binary.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="processor_family" type="maec:ProcessorTypeEnum">
			<xs:annotation>
				<xs:documentation>The processor_family attribute specifies the class of processor that the code snippet is targeting. Possible values: x86-32, x86-64, IA-64, PowerPC, ARM, Alpha, SPARC, z/Architecture, eSi-RISC, MIPS, Motorola 68k, Other.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="xor_pattern" type="xs:hexBinary" default="55AA55AA55AA55BB">
			<xs:annotation>
				<xs:documentation>The xor_pattern attribute contains a 16-hexadecimal-character hex string, which represents the pattern that the Code_Segment element should be XORed with in order to recover the actual code. The default value is 55AA55AA55AA55BB, as specified by IETF RFC 5901.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="IndicatorType">
		<xs:annotation>
			<xs:documentation>The IndicatorType complex type provides a way of defining MAEC Object-based indicators for malware and related entities, such as Actions and Behaviors, along with any additional context behind the indicator. An indicator in this context can be defined as the particular set of objects that can be used to identify the presence of malware on a system.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Author" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Author element is used to indicate the author of the indicator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Description" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Description element provides a brief description of the indicator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Source" type="maec:SourceType">
				<xs:annotation>
					<xs:documentation>The Source element provides information the source of the indicator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Comments" type="maec:CommentsType">
				<xs:annotation>
					<xs:documentation>The Comments element is used to capture any comments regarding or relevant to the indicator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Target" type="maec:TargetType">
				<xs:annotation>
					<xs:documentation>The Target element provides a way of characterizing the particular target of the indicator, whether it be an object, action, behavior, malware instance, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="1" name="Observables" type="maec:ObservableType">
				<xs:annotation>
					<xs:documentation>The Observables element specifies the actual observables that the indicator is composed of. In most cases, this will be one or more MAEC Objects embedded in a layer of Boolean logic.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="id" use="optional" type="maec:IndicatorIDPattern">
			<xs:annotation>
				<xs:documentation>The id attribute specifies a unique ID for this MAEC Indicator. The ID must follow the pattern defined in the IndicatorIDPattern simple type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="idref" type="maec:IndicatorIDREFPattern">
			<xs:annotation>
				<xs:documentation>The idref attribute specifies a reference to a unique ID for this MAEC Indicator. The ID must follow the pattern defined in the IndicatorIDREFPattern simple type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="creation_datetime" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>The creation_datetime attribute specifies the date/time that the indicator was created.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="lastupdate_datetime" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>The lastupdate_datetime attribute specifies the last date/time that the indicator was updated.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="importance" type="maec:ImportanceTypeEnum">
			<xs:annotation>
				<xs:documentation>The importance attribute specifies the relative importance of the indicator.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="numeric_importance" type="xs:nonNegativeInteger">
			<xs:annotation>
				<xs:documentation>The numeric_importance attribute specifies the specific numeric importance of the indicator.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="version" type="xs:string">
			<xs:annotation>
				<xs:documentation>The version attribute specifies the version of the indicator.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="TargetType">
		<xs:annotation>
			<xs:documentation>The TargetType complex type provides a mechanism for characterizing the particular entity being targeted by an indicator or signature, whether it is a particular malware instance, object, action, behavior, family, class, or other.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element minOccurs="0" name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Name element refers to the name of the Malware Instance, Malware Family, or Malware Class being targeted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Description" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Description element is intended to provide a brief description of the entity that is being targeted.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Targeted_Behaviors">
				<xs:annotation>
					<xs:documentation>The Targeted_Behaviors element references any MAEC-defined Behaviors that are being targeted.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence maxOccurs="1">
						<xs:element name="Behavior" type="maec:BehaviorType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>The Behavior element specifies a single MAEC Behavior that is being targeted by the indicator or signature.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Targeted_Actions">
				<xs:annotation>
					<xs:documentation>The Targeted_Actions element references any MAEC-defined Actions that are being targeted.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence maxOccurs="1">
						<xs:element name="Action" type="maec:ActionType" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>The Action element specifies a single MAEC Action that is being targeted by the indicator or signature.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element minOccurs="0" name="Targeted_Objects">
				<xs:annotation>
					<xs:documentation>The Targeted_Objects element references any MAEC-defined Objects that are being targeted.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence maxOccurs="1">
						<xs:element maxOccurs="unbounded" name="Object" type="maec:ObjectType">
							<xs:annotation>
								<xs:documentation>The Object element specifies a single MAEC Object that is being targeted by the indicator or signature.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="type" type="maec:TargetTypeEnum" use="required">
			<xs:annotation>
				<xs:documentation>The type attribute refers to the specific entity being targeted. Possible values are: Malware_Instance, Malware_Family, Malware_Class, Behavior, Action, Anomaly, Packer, Other.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="SourceType">
		<xs:annotation>
			<xs:documentation>The SourceType complex type provides a way of characterizing the external source of a relevant MAEC entity, such as an analysis or indicator.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Name element refers to the name of the person linked to the source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Method" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Method element provides an abstract way of specifying the method used to obtain the data that the Source element refers to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Reference" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Reference element provides an abstract way of specifying a reference name or ID for the source.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Organization" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Organization element specifies the name of the organization from which the source originated.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="URL" type="URIObj:URI_Object_Type">
				<xs:annotation>
					<xs:documentation>The URL element specifies the URl of the external source, if applicable.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CommentsType">
		<xs:annotation>
			<xs:documentation>The CommentsType complex type provides a simple way of capturing any comments related malware associated entities, such as analyses and indicators.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Comment">
				<xs:complexType>
					<xs:simpleContent>
						<xs:extension base="xs:string">
							<xs:attribute name="author" type="xs:string">
								<xs:annotation>
									<xs:documentation>The author attribute specifies the name of the author that added the comment.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
							<xs:attribute name="timestamp" type="xs:dateTime">
								<xs:annotation>
									<xs:documentation>The timestamp attribute specifies the date/time that the comment was added.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:simpleContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="BaseCollectionType">
		<xs:annotation>
			<xs:documentation>The BaseCollectionType complex type is the base type for other MAEC collection types.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Affinity_Type" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Affinity_Type element provides an abstract way of characterizing how the objects in a collection are related.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Affinity_Degree" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Affinity_Degree element is intended to provide an abstract way of characterizing the degree to which the objects in a collection are related.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Description" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Description element contains a textual description of the collection.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string">
			<xs:annotation>
				<xs:documentation>The name attribute specifies the name of the collection.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="IndicatorCollectionType">
		<xs:annotation>
			<xs:documentation>The IndicatorCollectionType complex type provides a mechanism for characterizing collections of indicators.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="maec:BaseCollectionType">
				<xs:sequence>
					<xs:choice maxOccurs="unbounded">
						<xs:element name="Indicator_Sub_Collection"
							type="maec:IndicatorCollectionType" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Indicator_Sub-Collection element specifies a sub-collection of MAEC Indicators in the collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Indicator" type="maec:IndicatorType" minOccurs="1">
							<xs:annotation>
								<xs:documentation>The Indicator element specifies a single MAEC Indicator in the collection.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="id" type="maec:IndicatorCollIDPattern">
					<xs:annotation>
						<xs:documentation>The id attribute specifies a unique ID for this MAEC Indicator Collection. The ID must follow the pattern defined in the IndicatorCollIDPattern simple type. </xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AssociatedObjectType">
		<xs:annotation>
			<xs:documentation>The AssociatedObjectType complex type represents the characterization of a malware Object associated with a given malware Action.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="maec:ObjectType">
				<xs:sequence>
					<xs:element minOccurs="0" name="Action-Pertinent_Object_Attributes">
						<xs:annotation>
							<xs:documentation>The Action-Pertinent_Object_Attributes element is optional and identifies which of the Attributes of this Object are specifically pertinent to this Action.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element maxOccurs="unbounded" name="Attribute">
									<xs:annotation>
										<xs:documentation>The Attribute element identifies a single Object Attribute that is specifically pertinent to this Action.</xs:documentation>
									</xs:annotation>
									<xs:complexType>
										<xs:attribute name="Name" type="xs:string">
											<xs:annotation>
												<xs:documentation>The Name attribute specifies the field name for the pertinent Object Attribute.</xs:documentation>
											</xs:annotation>
										</xs:attribute>
										<xs:attribute name="XPath" type="xs:string">
											<xs:annotation>
												<xs:documentation>The XPath attribute specifies the XPath expression identifying the pertinent attribute within the Defined_Object schema for this object type.</xs:documentation>
											</xs:annotation>
										</xs:attribute>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="AssociationType">
					<xs:annotation>
						<xs:documentation>The AssociationType attribute specifies the kind of association this Object holds for this Action.</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="Initiating"/>
							<xs:enumeration value="Affected"/>
							<xs:enumeration value="Utilized"/>
							<xs:enumeration value="Returned"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="RelatedObjectType">
		<xs:annotation>
			<xs:documentation>The RelatedObjectType complex type provides a method for the characterization of relationships among MAEC Objects.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="maec:ObjectType">
				<xs:attribute name="Relationship">
					<xs:annotation>
						<xs:documentation>The Relationship attribute specifies the nature of the relationship between this Object and the Related_Object.</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="cybox:ObjectRelationshipEnum"/>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="BehaviorRelationshipType">
		<xs:annotation>
			<xs:documentation>The BehaviorRelationshipType complex type provides a method for the characterization of relationships among MAEC Behaviors. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element maxOccurs="unbounded" name="Behavior" type="maec:BehaviorType" minOccurs="1">
				<xs:annotation>
					<xs:documentation>The Behavior element specifies a single MAEC Behavior in the relationship.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="type" use="optional">
			<xs:annotation>
				<xs:documentation>The type attribute specifies the nature of the relationship between behaviors that is being characterized.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="cybox:RelationshipTypeEnum">
					<xs:enumeration value="Preceded_By"/>
					<xs:enumeration value="Followed_By"/>
					<xs:enumeration value="Related_To"/>
					<xs:enumeration value="Dependent_On"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="AnalysisSubjectType">
		<xs:annotation>
			<xs:documentation>The AnalysisSubjectType complex type provides a method for characterizing the particular subject of a malware analysis.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element minOccurs="1" name="Object" type="maec:ObjectType">
					<xs:annotation>
						<xs:documentation>The Object element allows for the direct characterization of an object that is the subject of the analysis.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element minOccurs="1" name="URL" type="URIObj:URI_Object_Type">
					<xs:annotation>
						<xs:documentation>The URL element specifies a URL that is the subject of the analysis.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element minOccurs="0" name="Field_Data" type="metadata:fieldDataEntry">
				<xs:annotation>
					<xs:documentation>This element contains any element data about the analysis subject, such as prevalance information, etc. It references the FieldData type from the IEEE ICSG Malware Metadata Exchange schema.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Command_Line" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Command_Line element specifies the command line used to launch the subject binary. This is relevant primarily to the dynamic analysis (analysis of an executing binary) use case.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Analysis_Duration" type="xs:float">
				<xs:annotation>
					<xs:documentation>The Analysis_Duration element specifies the duration of the overall dynamic analysis process, in seconds. This is relevant primarily to the dynamic analysis (analysis of an executing binary) use case.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element minOccurs="0" name="Exit_Code" type="xs:integer">
				<xs:annotation>
					<xs:documentation>The Exit_Code element specifies the exit code with which the subject binary exited. This is relevant primarily to the dynamic analysis (analysis of an executing binary) use case.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StatefulMeasureType">
		<xs:annotation>
			<xs:documentation>The StatefulMeasureType is a complex type representing a cyber observable property that is statically stateful in nature (e.g. a registry key holding a certain value, a specific mutex existing or a file having a specific MD5 hash). It extends the CybOX StatefulMeasureType.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="cybox:StatefulMeasureType">
				<xs:sequence>
					<xs:element ref="maec:Object"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ObservableType">
		<xs:annotation>
			<xs:documentation>The ObservableType is a complex type representing a description of a single cyber observable. It extends the CybOX ObservableType.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="cybox:ObservableType">
				<xs:choice>
					<xs:element minOccurs="0" name="Stateful_Measure"
						type="maec:StatefulMeasureType">
						<xs:annotation>
							<xs:documentation>The Stateful Measure element enables specification of a cyber observable property in the malware context that is statically stateful in nature (e.g. a registry key holding a certain value, a specific mutex existing or a file having a specific MD5 hash). </xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StateChangeEffectType">
		<xs:annotation>
			<xs:documentation>The StateChangeEffectType is intended as a generic way of characterizing the effects of actions upon MAEC objects where some state of the object is changed. This type extends the CybOX DefinedEffectType.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="cybox:DefinedEffectType">
				<xs:sequence>
					<xs:element minOccurs="0" name="Old_State" type="maec:ObjectType">
						<xs:annotation>
							<xs:documentation>The Old_State element specifies the object and its attributes as they were before the state change effect.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="New_State" type="maec:ObjectType">
						<xs:annotation>
							<xs:documentation>The New_State element specifies the object and its attributes as they are after the state change effect.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:simpleType name="ProgrammingLanguageEnum">
		<xs:annotation>
			<xs:documentation>The ProgrammingLanguageEnum simple type is an (non-exhaustive) enumeration of computer programming languages.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="C"/>
			<xs:enumeration value="C++"/>
			<xs:enumeration value="C#"/>
			<xs:enumeration value="Java"/>
			<xs:enumeration value="JSP"/>
			<xs:enumeration value="Javascript"/>
			<xs:enumeration value="ASP.NET"/>
			<xs:enumeration value="SQL"/>
			<xs:enumeration value="Python"/>
			<xs:enumeration value="Perl"/>
			<xs:enumeration value="PHP"/>
			<xs:enumeration value="SOAP"/>
			<xs:enumeration value="Ruby"/>
			<xs:enumeration value="Shell"/>
			<xs:enumeration value="PseudoCode"/>
			<xs:enumeration value=".NET"/>
			<xs:enumeration value="Assembly"/>
			<xs:enumeration value="XML"/>
			<xs:enumeration value="HTML"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ProcessorTypeEnum">
		<xs:annotation>
			<xs:documentation>The ProcessorTypeEnum simple type is an (non-exhaustive) enumeration of computer processor architectures.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="x86-32"/>
			<xs:enumeration value="x86-64"/>
			<xs:enumeration value="IA-64"/>
			<xs:enumeration value="PowerPC"/>
			<xs:enumeration value="ARM"/>
			<xs:enumeration value="Alpha"/>
			<xs:enumeration value="SPARC"/>
			<xs:enumeration value="z/Architecture"/>
			<xs:enumeration value="eSi-RISC"/>
			<xs:enumeration value="MIPS"/>
			<xs:enumeration value="Motorola 68k"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BundleIDPattern">
		<xs:annotation>
			<xs:documentation>The BundleIDPattern simple type defines the format for acceptable MAEC Bundle ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'bnd', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-bnd-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ActionIDPattern">
		<xs:annotation>
			<xs:documentation>The ActionIDPattern simple type defines the format for acceptable MAEC Action ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'act', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-act-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BehaviorIDPattern">
		<xs:annotation>
			<xs:documentation>The BehaviorIDPattern simple type defines the format for acceptable MAEC Behavior ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'bhv', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-bhv-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BehaviorIDREFPattern">
		<xs:annotation>
			<xs:documentation>The BehaviorIDPattern simple type defines the format for acceptable MAEC Behavior id references. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'bhv', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:IDREF">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-bhv-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ObjectIDPattern">
		<xs:annotation>
			<xs:documentation>The ObjectIDPattern simple type defines the format for acceptable MAEC Object ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'obj', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-obj-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AnalysisIDPattern">
		<xs:annotation>
			<xs:documentation>The AnalysisIDPattern simple type defines the format for acceptable MAEC Analysis ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'ana', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-ana-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CodeIDPattern">
		<xs:annotation>
			<xs:documentation>The CodeIDPattern simple type defines the format for acceptable MAEC Code ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'cde', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-cde-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ActionImpIDPattern">
		<xs:annotation>
			<xs:documentation>The ActionImpIDPattern simple type defines the format for acceptable MAEC Action Implementation ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'imp', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-imp-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ActionCollIDPattern">
		<xs:annotation>
			<xs:documentation>The ActionCollIDPattern simple type defines the format for acceptable MAEC Action Collection ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the four letter code 'actc', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-actc-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="BehaviorCollIDPattern">
		<xs:annotation>
			<xs:documentation>The BehaviorCollIDPattern simple type defines the format for acceptable MAEC Behavior Collection ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the four letter code 'bhvc', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-bhvc-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ObjectCollIDPattern">
		<xs:annotation>
			<xs:documentation>The ObjectCollIDPattern simple type defines the format for acceptable MAEC Object Collection ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the four letter code 'objc', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-objc-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IndicatorIDPattern">
		<xs:annotation>
			<xs:documentation>The IndicatorIDPattern simple type defines the format for acceptable MAEC indicator ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'ind', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-ind-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IndicatorIDREFPattern">
		<xs:annotation>
			<xs:documentation>The IndicatorIDPattern simple type defines the format for acceptable MAEC indicator id references. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the three letter code 'ind', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:IDREF">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-ind-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="IndicatorCollIDPattern">
		<xs:annotation>
			<xs:documentation>The IndicatorCollIDPattern simple type defines the format for acceptable MAEC indicator collection ids. A dash-delimited format is used with the id starting with the word maec followed by a unique string, followed by the four letter code 'indc', and ending with an integer.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:pattern value="maec-[A-Za-z0-9_\-\.]+-indc-[1-9][0-9]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ImportanceTypeEnum">
		<xs:annotation>
			<xs:documentation>The ImportanceTypeEnum simple type is an enumeration of relative importance measures.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="High"/>
			<xs:enumeration value="Medium"/>
			<xs:enumeration value="Low"/>
			<xs:enumeration value="Informational"/>
			<xs:enumeration value="Numeric"/>
			<xs:enumeration value="Unknown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TargetTypeEnum">
		<xs:annotation>
			<xs:documentation>The TargetTypeEnum simple type is an enumeration of the different types of entities that a malware indicator or signature may target.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Instance"/>
			<xs:enumeration value="Family"/>
			<xs:enumeration value="Class"/>
			<xs:enumeration value="Behavior"/>
			<xs:enumeration value="Action"/>
			<xs:enumeration value="Anomaly"/>
			<xs:enumeration value="Packer"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AnalysisTypeEnum">
		<xs:annotation>
			<xs:documentation>The AnalysisTypeEnum simple type is an enumeration of types of malware analyses.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Triage"/>
			<xs:enumeration value="In-depth/Manual"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AnalysisMethodEnum">
		<xs:annotation>
			<xs:documentation>The AnalysisMethodEnum simple type is an enumeration of malware analysis methods.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Static"/>
			<xs:enumeration value="Dynamic"/>
			<xs:enumeration value="Combinatorial"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ActionImpTypeEnum">
		<xs:annotation>
			<xs:documentation>The AnalysisMethodEnum simple type is an enumeration of action implementation types.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="API_Call"/>
			<xs:enumeration value="Code"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MalcodeTypeEnum">
		<xs:annotation>
			<xs:documentation>The MalcodeTypeEnum simple type is a non-exhaustive enumeration of types of malicious code. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
</xs:schema>
