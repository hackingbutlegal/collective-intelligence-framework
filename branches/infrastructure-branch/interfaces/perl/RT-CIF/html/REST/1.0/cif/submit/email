<%ARGS>
$POSTDATA => undef
</%ARGS>
<%INIT>
use RT::Interface::REST;
use CIF::Message::Email;
use JSON;

my %tests;
$tests{'restriction'} = qr/^(private|default|need-to-know|public)$/;
$tests{'severity'} = qr/^(high|medium|low)$/;
$tests{'confidence'} = qr/^[0-9]$/;
$tests{'description'} = qr/(phish)/;

my $content = $POSTDATA;
my @a = @{decode_json($content)};
my @ids;
foreach (@a){
    my $rec = $_;
    foreach my $test (keys %tests){
        unless($rec->{$test} =~ /$tests{$test}/){
            $m->out('input validation failure: '.$test.'/'.$rec->{$test});
            $m->abort();
        }
    }
    my $description = $_->{'description'};
    my $addr = $_->{'address'};
    unless($description =~ /$addr/){
        $description .= ' '.$addr;
    }

    my $severity = (lc($_->{'severity'}) eq 'low') ? 'low' : 'medium';
    my $impact = 'phishing replyto';

    my $id = CIF::Message::Email->insert({
        source      => $session{'CurrentUser'}->EmailAddress(),
        address     => $_->{'address'},
        impact      => $impact,
        severity    => $severity,
        confidence  => $_->{'confidence'},
        detecttime  => $_->{'detecttime'},
        restriction => $_->{'restriction'},
        description => $_->{'description'},
        alternativeid   => $_->{'alternativeid'},
        alternativeid_restriction   => $_->{'alternativeid_restriction'},
    });
    push(@ids,$id);
}
$m->out('['.join(',', map { '{"uuid":'.'"'.$_->uuid().'"}' } @ids).']');

</%INIT>
