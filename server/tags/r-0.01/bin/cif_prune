#!/usr/bin/perl

use strict;
use warnings;

# fix lib paths, some may be relative
BEGIN {
    require File::Spec;
    my @libs = ("lib", "local/lib");
    my $bin_path;

    for my $lib (@libs) {
        unless ( File::Spec->file_name_is_absolute($lib) ) {
            unless ($bin_path) {
                if ( File::Spec->file_name_is_absolute(__FILE__) ) {
                    $bin_path = ( File::Spec->splitpath(__FILE__) )[1];
                }
                else {
                    require FindBin;
                    no warnings "once";
                    $bin_path = $FindBin::Bin;
                }
            }
            $lib = File::Spec->catfile( $bin_path, File::Spec->updir, $lib );
        }
        unshift @INC, $lib;
    }
}

use Getopt::Std;
use DateTime;
use Data::Dumper;
use Date::Manip::Date;

my %opts;
getopts('hdk:s:c:S:',\%opts);

our $debug      = $opts{'d'};
my $keep        = $opts{'k'} || 180;
my $specific    = $opts{'S'};
my $confidence  = $opts{'c'} || 40;
my $severity    = $opts{'s'} || 'medium';

if($opts{'h'}){
    print usage();
    exit(0);
}
sub usage {
    return <<EOF;
Usage: $0
    -h  --help:     this message
    -d  --debug:    debug

    -S  --specific:     prune specific index
    -k  --keep:         number of days to keep, default: $keep
    -c  --confidence:   min confidence to keep, default $confidence
    -s  --severity:     min severity to keep, default: $severity

Examples:
    $0 -S infrastructure -d
    $0 -k 365
    $0 -k 365 -c 75

EOF
}

my $dt = Date::Manip::Date->new();
my $delta = $dt->new_delta();
$dt->parse('today');
$delta->parse($keep.' days ago');
$dt = $dt->calc($delta)->printf('%OZ');

my $p = 'CIF::Archive';
if($specific){
    $p = 'CIF::Archive::DataType::Plugin::'.ucfirst($specific);
}
eval "require $p";
die($@) if($@);
my $ret = $p->prune($dt,$confidence,$severity);
