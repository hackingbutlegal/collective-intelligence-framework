#summary upgrading from a v0 instance

= Introduction =

 * pre-v0 instances (xml) are not supported
 * this upgrade assumes latest v0 instance (v0.06)

= Details =

There are two ways to perform an upgrade, in-place and new installation. Both of these options take some time as we evolve our data formats. They require that the discrete steps are followed very carefully to avoid data corruption, etc.

== In-Place Upgrade ==

 * does NOT alter the archive and index tablespaces
 * drops all v0 tables, with the exception of archive, apikeys and apikeys_groups
 * alters the archive and apikeys tables to be compatible with v1
 * creates the v1 tables around the archive table (in the index tablespace)

== New Installation Upgrade ==
=== Overview ===
 * this requires a new installation of v1 on a separate host
 * this requires a copy of the existing archive table file to be made available to the new installation
 * this option takes a little longer as a data-export / import is required
 * depending on the size of your archive tablespace, it could require extra temporary space to do the export (eg: a fast, external usb drive is handy in these cases if your network is too slow for moving large files around easily)

=== Details ===
There are two ways to handle this type of upgrade:

 * cut off all services, run the upgrade, turn on all services
 * split the migration into two different exports, the first for the bulk of the historical data, the second for the data absorbed by the system from that point on

{{{
$ psql -U postgres -d cif
psql> COPY (select uuid,guid,format,created,data from archive WHERE created <= '2012-06-01T23:59:59Z' AND format = 'iodef' AND description NOT LIKE '% feed') TO '/tmp/cif.sql WITH binary;
}}}

where the 'created' timestamp is a cutoff date sometime in the past (eg: "yesterday"). something easily pointed to in the next export for the official cutover:

{{{
$ psql -U postgres -d cif
psql> COPY (select uuid,guid,format,created,data from archive WHERE created > '2012-06-01T23:59:59Z' AND format = 'iodef' AND description NOT LIKE '% feed') TO '/tmp/cif.sql WITH binary;
}}}

{{{
$ psql -U postgres -d cif
psql> COPY archive (uuid,format,created,data) FROM '/tmp/cif.sql' WITH binary;
}}}