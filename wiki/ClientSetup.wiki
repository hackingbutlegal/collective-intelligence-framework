#labels Phase-Implementation,Featured,Phase-Deploy,Client
initial how-to explaining the initial setup of your client

= [http://bit.ly/gPkjhQ Client Libraries] =
== Perl ==

 1. install the client library
{{{
$> sudo perl -MCPAN -e 'install REST::Client, Text::Table, JSON, Module::Pluggable, Config::Simple, Snort::Rule, Class::Accessor, Digest::MD5, Digest::SHA1, Regexp::Common::net'
$> wget http://search.cpan.org/CPAN/authors/id/S/SA/SAXJAZMAN/cif/CIF-Client-0.00_04.tar.gz
$> tar -zxvf CIF-Client-0.00_04.tar.gz
$> cd CIF-Client-0.00_04
$> perl Makefile.PL && make && sudo make install
}}}
 1. run a sample query for testing:
{{{
$> cif -h
$> cif -q example.com
$> cif -q 192.168.1.0/24
$> cif -q c09bdd5529fa4111758a7e8de0d615a6
$> cif -q url/246c9fa16cdc19411ace5cb43c301d2c
$> cif -q malware -s low
$> cif -q infrastructure
$> cif -q infrastructure/network -p snort
$> cif -q domain -p bindzone
$> cif -q url -w low | grep -v private
}}}

=== Python ===

 1. make sure setup tools is installed
 1. easy_install [http://pypi.python.org/pypi?:action=pkg_edit&name=cif cif]
 1. run a sample query for testing:
{{{
$> cifcli.py -h
$> cifcli.py -h
$> cifcli.py -q example.com
$> cifcli.py -q 192.168.1.1
$> cifcli.py -q c09bdd5529fa4111758a7e8de0d615a6
$> cifcli.py -q url/246c9fa16cdc19411ace5cb43c301d2c
$> cifcli.py -q malware -s low
$> cifcli.py -q infrastructure
$> cifcli.py -q infrastructure/network -p snort
$> cifcli.py -q domain -p bindzone
$> cifcli.py -q url -w low | grep -v private
}}}

= Global Configuration File =
 1. create a configuration file: ~/.cif with the following:
{{{
[client]
host = https://example.com:443/api
apikey = xx-xx-xx-xx-xx
timeout = 60
#severity = medium
}}}

== Queries ==
*BY DEFAULT, ALL QUERIES ARE ANONYMOUSLY LOGGED*

When performing a query, your apikey is hashed (sha1-uuid) and the basics of your search are logged by the system.  This allows others to see when there might be interest in a specific piece of intelligence, but not necessarily any concreate "feed" type data. These searches show up like this:
{{{
$ cif -q example.com
Query: example.com
no records

$ cif -q example.com
Query: example.com
Feed Restriction: private
Feed Created: 2011-01-20T15:44:14Z

restriction|severity|address    |rdata|type|detecttime            |description       |alternativeid_restriction|alternativeid
private |        |example.com|     |    |2011-01-20 15:00:00+00|search example.com|private               |             
}}}

The raw data of the search appears like this in the data-warehouse:
{{{
id |    uuid         |     source   | message
569003 | 7f9f6578-84a3-50fd-8bc1-bd837d61546f | xx-xx-xx-xx-xx | <IODEF-Document><Incident restriction="private"><IncidentID name="xx-xx-xx-xx-xx"/><DetectTime>2011-01-20T15:00:00Z</DetectTime><Description>search example.com</Description><Assessment><Impact>search</Impact></Assessment><EventData><Flow><System><Node><Address category="ext-value" ext-category="domain">example.com</Address></Node></System></Flow></EventData></Incident></IODEF-Document>
}}}

= Feeds =
== Feed Generation ==
 1. for performance reasons, we aggregate feeds via cron
 1. each feed is aggregated, compressed and base64 encoded, then inserted into a database for quicker delivery
 1. each set of client libraries is designed to detect this encoding and transparently decode/decompress the feeds and return the results to your output without any extra setup
 1. because of this, larger feeds may take longer to decode/decompress on your client, but results in less load against the data-warehouse and the servers
 1. feeds are cached and generated as follows:
  1. high severity (default): */5 min
  1. medium severity: */15 min
  1. low severity: */60 min

== Default Severity ==
By default, when pulling a feed (NOT a query), the client is set to grab the "high severity" feed. These feeds are generally human vetted feeds, with a very low false positive rate. There are two different ways to "override this" feature, by either modifying your client config or adding "-s low" or "-s medium" to your command line client.
{{{
[client]
host = https://example.com:443/api
apikey = xx-xx-xx-xx-xx
timeout = 60
severity = medium
}}}
{{{
$> cif -q domain -s medium
}}}
== Default Restriction ==
By default the server is set to provide either a need-to-know or private feed, depending on it's settings.  To override this feature, simply modify your config file by adding "restriction = private", or by adding "-r private" to your cif command:
{{{
$> cif -q domain -r private
}}}
{{{
[client]
host = https://example.com:443/api
apikey = xx-xx-xx-xx-xx
timeout = 60
restriction = private
}}}