#labels Phase-Deploy,Phase-Implementation,Featured
Instructions for standing up a CIF instance

= Preamble =

Trust me, these scripts do a lot of dns queries. You're gonna wanna install bind and configure it to use forwarders. Maybe something like google public dns to help mask your queries. Then point your resolv.conf to localhost

Once installed, monitor your dns traffic a bit, your server will be looking up some interesting information. Get a good handle on this and work with your security teams to whitelist this server.

= System Deps =
 # ServerInstall_Generic
 # ServerInstall_Lenny
 # ServerInstall_Ubuntu10

= Postgres =
 # Modify your postgres config
{{{
$ diff -u pg_hba.conf.orig pg_hba.conf
--- pg_hba.conf.orig	2010-09-02 12:06:29.000000000 +0000
+++ pg_hba.conf	2010-09-02 12:21:43.000000000 +0000
@@ -71,13 +71,13 @@
 # (autovacuum, daily cronjob, replication, and similar tasks).
 #
 # Database administrative login by UNIX sockets
-local   all         postgres                          ident sameuser
+local   all         postgres                          trust 
 
 # TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
 
 # "local" is for Unix domain socket connections only
-local   all         all                               ident sameuser
+local   all         all                               trust 
 # IPv4 local connections:
-host    all         all         127.0.0.1/32          md5
+host    all         all         127.0.0.1/32          trust
 # IPv6 local connections:
-host    all         all         ::1/128               md5
+host    all         all         ::1/128               trust
}}}
 # reload postgres
{{{
$ sudo /etc/init.d/postgresql reload
}}}
 # set error logging in postgres to "log" (key violations generate lots of errors):
{{{
vi /etc/postgresql/8.3/main/postgresql.conf +296 (or so)
log_min_messages = log
}}}
 # make sure your user can:
{{{
$> psql -U postgres
}}}
= CIF::DBI =
 # install the main server interface:
{{{
$> wget http://search.cpan.org/CPAN/authors/id/S/SA/SAXJAZMAN/cif/CIF-DBI-0.00_02.tar.gz
$> tar -zxvf CIF-DBI-0.00_02.tar.gz
$> cd CIF-DBI-0.00_02
$> perl Makefile.PL
$> make && sudo make install
$> sh database_rebuild.sh
}}}
 # make sure your user can:
{{{
$> psql -U postgres -d cif
}}}
== Notes ==
 * see the ./scripts directory for helper cron scripts
= CIF::WebAPI =
== Instructions ==
 # read the README
 # install the main server interface:
{{{
$> wget http://search.cpan.org/CPAN/authors/id/S/SA/SAXJAZMAN/cif/CIF-WebAPI-0.00_02.tar.gz
$> tar -zxvf CIF-WebAPI-0.00_02.tar.gz
$> cd CIF-WebAPI-0.00_02
$> perl Makefile.PL
$> make && sudo make install
$> psql -U postgres -d cif < apikeys.sql
$> sudo cp api.conf /etc/apache2/sites-available/ (or wherever your apache sites dir is)
}}}
== Notes ==
 * script/cif_apikeys is a command line interface to the apikeys table
{{{
$> cif_apikeys -h
$> cif_apikeys -u joe@example.com -a
}}}
 * api.conf should be modified to suit your needs
= cif-feeds-public =
== Install Instructions ==
 # create a "cif" user:
{{{
$> sudo adduser cif
}}}
 # install the cif-feeds-public code:
{{{
$> wget http://collective-intelligence-framework.googlecode.com/files/cif-feeds-public-0.01.tar.gz
$> tar -zxvf cif-feeds-public-0.01.tar.gz
$> cd cif-feeds-public-0.01
$> ./configure --with-cif-user=cif --with-cif-group=cif
$> make
$> sudo make install
$> ls -all /opt/cif-public-feeds/bin
}}}
== Configuration Instructions ==
 # configure /etc/cif and configure feed crons
{{{
$> sudo mkdir /etc/cif
}}}
 # setup the weekly crons, sudo vi /etc/cif/cron_weekly:
{{{
/opt/cif-feeds-public/bin/alexa_whitelist.pl
}}}
 # setup the daily crons, sudo vi /etc/cif/cron_daily:
{{{
/opt/cif-feeds-public/bin/spamhaus_drop.pl
/opt/cif-feeds-public/bin/malc0de.pl
/opt/cif-feeds-public/bin/amada_proactive.pl
/opt/cif-feeds-public/bin/amada_ipblocklist.pl
/opt/cif-feeds-public/bin/maliciousnetworks.org_firelist.pl
}}}
 # setup the hourly crons, sudo vi /etc/cif/cron_hourly:
{{{
/opt/cif-feeds-public/bin/local_domain_whitelist.pl
/opt/cif-feeds-public/bin/local_infrastructure_whitelist.pl
/opt/cif-feeds-public/bin/malwaredomains.pl
/opt/cif-feeds-public/bin/phishtank.pl
/opt/cif-feeds-public/bin/zeustracker_binaries.pl
/opt/cif-feeds-public/bin/zeustracker_configs.pl
/opt/cif-feeds-public/bin/zeustracker_domains.pl
/opt/cif-feeds-public/bin/spyeye_binaries.pl
/opt/cif-feeds-public/bin/spyeye_configs.pl
/opt/cif-feeds-public/bin/spyeye_domains.pl
/opt/cif-feeds-public/bin/mpatrol_hashes.pl
/opt/cif-feeds-public/bin/mpatrol_urls.pl
/opt/cif-feeds-public/bin/threatexpert.pl
/opt/cif-feeds-public/bin/sshbl.pl
}}}
 # set the permissions:
{{{
$> sudo chown -R cif:cif /etc/cif
}}}
 # setup the cron
{{{
$> sudo su - cif
$> touch .cif_domain_whitelist
$> touch .cif_infrastructure_whitelist
$> crontab -e
}}}
 * add the following:
{{{
# m h  dom mon dow   command
05 *    * * * sh /opt/cif-feeds-public/bin/cron.sh hourly &> /dev/null
15 04  * * * sh /opt/cif-feeds-public/bin/cron.sh daily &> /dev/null
30 05  * * sun sh /opt/cif-feeds-public/bin/cron.sh weekly &> /dev/null

# update the feeds
*/5  *  * * * /usr/local/bin/cif_feeds &> /dev/null
00 *  * * * /usr/local/bin/cif_feeds -s medium &> /dev/null
00  00  * * * /usr/local/bin/cif_feeds -s low &> /dev/null

# resolve bulk-inserted domains
#00 * * * * /usr/local/bin/cif_domains_resolve &> /dev/null
}}}