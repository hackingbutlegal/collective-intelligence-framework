#summary installing the dbi component in stand-alone mode
#labels Version-1

<font color='red'>
=Unstable=
</font>

= Introduction =

* Table of Contents *
<wiki:toc max_depth="2" />

= Details =
== Install Required Dependencies ==
 * (unstable) [DbiInstall_DebianSqueeze_v1 Debian Squeeze]
 * (unstable) [DbiInstall_Ubuntu12_v1 Ubuntu12]
 * (unstable) [DbiInstall_CentOS6_v1 CentOS6]

== Install Library ==
 # download the latest libcif-dbi [http://code.google.com/p/collective-intelligence-framework/downloads/list?q=label:v1+libcifdbi package]
{{{
$ tar -xzvf libcif-v1-XXX.tar.gz
$ cd libcif-dbi-v1-XXX
$ ./configure && make testdeps
$ sudo make install
}}}
== Examples ==
-----
=== Configs ===
the application user must have a a cif config it can read, for example if it's a web application, a /etc/apache/mycif.conf could be created with the following:
{{{
# cif_archive configuration is required by cif-router, cif_feed (cif-router, libcif-dbi)
[cif_archive]
# if we want to enable rir/asn/cc, etc... they take up more space in our repo
# datatypes = infrastructure,domain,url,email,search,malware,cc,asn,rir
datatypes = infrastructure,domain,url,email,search,malware

# if you're going to enable feeds
# feeds = infrastructure,domain,url,email,search,malware

# enable your own groups is you start doing data-sharing with various groups
#groups = everyone,group1.example.com,group2.example.com,group3.example.com

[db]
host = 127.0.0.1
user = postgres
password =
database = cif
}}}
=== Paths ===
In order for an application to leverage the CIF libraries, the '/opt/cif/lib' path must be added to the application.
{{{
#!/usr/bin/perl

use strict;

# fix lib paths
BEGIN {
        unshift @INC, "/opt/cif/lib";
}

my ($err,$ret) = CIF::Profile->new({
    config  => '/etc/apache/mycif.conf',
});
die($err) if($err);
my $profile = $ret;
...
}}}