#summary centos 6 install doc (v1)

= Introduction =

This doc assumes a base CentOS5 x64 minimal base install.

* Table of Contents *
<wiki:toc max_depth="3" />

= Details =

== Caveats ==

=== Static Address ===
Make sure your instance has a static v4 address

=== IPv6 ===
There are some weird issues with the way RHEL (and therefor CentOS) handle the ipv6 driver module, and how some perl modules react to this. If you've left the ipv6 defaults (or leverage ipv6 for routing) you'll probably be OK. If you've "disabled" ipv6, you might run into some build testing issues. If you do, try to force install the modules, gather the testing output (and your ipv6 configurations, etc) and log a bug report.

=== SELINUX ===
Selinux either needs to be disabled or a [policy](http://wiki.centos.org/HowTos/SELinux) needs to be written allowing postgres r/w access to /mnt/archive and /mnt/index

 1. disable selinux via /etc/selinux/config
{{{
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=permissive
}}}
 1. restart the server for the kernel changes to take effect

## Add repositories
1. add the EPEL repo

		$ wget http://dl.fedoraproject.org/pub/epel/5/x86_64/epel-release-5-4.noarch.rpm
		$ sudo rpm -iv epel-release-5-4.noarch.rpm
		$ sudo rpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-5
		
1. add the postgresql repo (to install PostgreSQL 8.4)

		$ wget http://yum.postgresql.org/8.4/redhat/rhel-5.0-x86_64/pgdg-centos-8.4-3.noarch.rpm
		$ sudo rpm -iv pgdg-centos-8.4-3.noarch.rpm
		
		
## Dependency installation
1. install base server dependencies first

		$ sudo yum -y install rng-utils bind-utils postgresql-server httpd httpd-devel mod_ssl gcc make expat expat-devel uuid uuid-devel wget bind rsync mod_perl mod_perl-devel ntp

	* NOTE: removed or changed packages from CentOS 6
		* libuuid-devel doesn't exist (I think uuid-devel provides the same libraries)
		* rng-tools in CentOS 6 is rng-utils in CentOS 5
		* ntp package installs ntpdate
		* pretty sure I don't need the following (i.e. they're already installed), but need to check from a bare install:
			* rng-utils
			* wget
			* sudo
			* wget

1. make sure your clock is up to date (some packages might not install if it's too far skewed)

		$ sudo /sbin/ntpdate -u pool.ntp.org

1. install some 3rd party dependencies (specifically out of the EPEL repo)

		$ sudo yum -y install libapreq2 libapreq2-devel perl-libapreq2 zeromq zeromq-devel
		
1. install the baseline perl modules

		$ sudo yum -y install perl-Digest-SHA libxml2 libxml2-devel perl-XML-LibXML uuid-perl perl-DBD-Pg perl-XML-RSS perl-JSON perl-Unicode-String perl-Config-Simple perl-Module-Pluggable perl-MIME-Lite perl-Class-Accessor perl-YAML perl-XML-Parser perl-Net-DNS perl-DateTime-Format-DateParse perl-IO-Socket-INET6 openssl-devel perl-Module-Install perl-Net-SSLeay perl-Class-Trigger perl-IO-Socket-SSL
		 
	* NOTE: removed or changed packages from CentOS 6
		* perl-Date-Manip doesn't exist
		* perl-CPAN doesn't exist

1. configure CPAN for use (as root)

	* start cpan
	
			$ perl -MCPAN -e 'shell'
	
	* choose all default options
	* when it gets to the option to select a mirror, choost you continent, country, then an appropriate mirror
	* when returned to the `cpan>` prompt, type `exit`
		
1. update CPAN (as root)

		$ PERL_MM_USE_DEFAULT=1 perl -MCPAN -e 'install Bundle::CPAN'
		
	* If prompted during install, accept default values
	* Note that if this isn't done, DateTime refuses to install cleanly, which leads to other issues

1. Install (as root) the remaining CPAN modules

		$ PERL_MM_USE_DEFAULT=1 perl -MCPAN -e 'install Net::Abuse::Utils,Linux::Cpuinfo,Google::ProtocolBuffers,Iodef::Pb::Simple,Compress::Snappy,Net::Abuse::Utils::Spamhaus,Net::DNS::Match,Snort::Rule,Parse::Range,Log::Dispatch,ZeroMQ,Sys::MemInfo,JSON::XS,File::Type,LWP::UserAgent,Class::Trigger,Class::DBI,Net::Patricia,Text::Table,Mozilla::CA,Net::SSLeay,IO::Socket::SSL,IO::Socket::INET6,Text::CSV,XML::RSS,Date::Manip,Module::Pluggable,MIME::Lite,Time::HiRes,LWP::Protocol::https'

	* Note: changing the order of the packages in the above line can result in packages not building/installing correctly.
	* Note: The following packages have been added, compared to the CentOS 6 installation:
		* DateTime
		* Time::HiRes
		* MIME::Lite

## System Setup

### Resolve Config

1. modify /etc/sysconfig/network-scripts/ifcfg-eth0 with the following DNS1="127.0.0.1" line

		$ echo "DNS1=127.0.0.1" | sudo tee -a /etc/sysconfig/network-scripts/ifcfg-eth0
		
1. restart networking

		$ sudo /sbin/ifdown eth0 && sudo /sbin/ifup eth0
		
1. verify resolve config

		$ cat /etc/resolv.conf
		
	* should look like:

			; generated by /sbin/dhclient-script
			search localdomain
			nameserver 127.0.0.1
			
### PostgreSQL

1. init the main cluster

		$ sudo /sbin/service postgresql initdb
		
1. The default installation of PostgreSQL differs with respect to the rest of the documentation. Some symlinking aligns it:

		$ sudo mkdir -p /etc/postgresql/8.4/main
		$ sudo chown -R postgres:postgres /etc/postgresql
		$ sudo chmod 760 -R /etc/postgresql
		$ sudo ln -sf /var/lib/pgsql/data/postgresql.conf /etc/postgresql/8.4/main/postgresql.conf
		$ sudo ln -sf /var/lib/pgsql/data/pg_hba.conf /etc/postgresql/8.4/main/pg_hba.conf

## Default CIF user

1. create the default "cif" user/group

		$ sudo /usr/sbin/useradd cif
		
1. change the default home permissions

		$ sudo chmod 770 /home/cif
		
## CIF Router Configuration (Apache)
Some of the "CIF" values will be created later in the doc. For now just follow the config as is, don't worry about creating things in /opt/cif or /home/cif

1. if you need help generating your own certificates, follow the directions [here](http://wiki.centos.org/HowTos/Https)

1. unless you know what you're doing with virtual hosts, comment out the port-80 stuff in /etc/httpd/conf/httpd.conf (around line 130)

		# Listen: Allows you to bind Apache to specific IP addresses and/or
		# ports, in addition to the default. See also the <VirtualHost>
		# directive.
		#
		# Change this to Listen on specific IP addresses as shown below to
		# prevent Apache from glomming onto all bound IP addresses (0.0.0.0)
		#
		#Listen 12.34.56.78:80
		+ #Listen 80

1. configure httpd, add these lines to your /etc/httpd/conf.d/ssl.conf config (around line 80)

		<VirtualHost _default_:443>
		+      PerlRequire /opt/cif/bin/http_api.pl
		+      Include /etc/httpd/conf.d/cif.conf
		
1. create your config at /etc/httpd/conf.d/cif.conf, which should look like:

		<Location /api>
			SetHandler perl-script
			PerlResponseHandler CIF::Router::HTTP
			PerlSetVar CIFRouterConfig "/home/cif/.cif"
		</Location>
		
1. add your "apache" user to the group "cif" (this modifies /etc/group):

		$ sudo /usr/sbin/usermod -a -G cif apache
		
## Random Number Generator
The "rngd' service [helps](https://www.centos.org/modules/newbb/viewtopic.php?topic_id=36209) with random number generation (mainly used for generating security certificates in bind and apache, speeds up the entropy process).

1. By default, there is no rngd service script. This does exist in CentOS 6, so we'll take that one and use it.

	* create a new file /etc/init.d/rngd
	
			#!/bin/bash
			#
			# rngd        This starts and stops rngd
			#
			# chkconfig: - 13 99
			# description: This starts the Random Number Generator Daemon, \
			#              which collects entropy from hardware sources and \
			#              write it to /dev/random
			#
			# processname: /sbin/rngd
			# config: /etc/sysconfig/rngd
			# pidfile: /var/run/rngd.pid
			#
			# Return values according to LSB for all commands but status:
			# 0 - success
			# 1 - generic or unspecified error
			# 2 - invalid or excess argument(s)
			# 3 - unimplemented feature (e.g. "reload")
			# 4 - insufficient privilege
			# 5 - program is not installed
			# 6 - program is not configured
			# 7 - program is not running
			#


			PATH=/sbin:/bin:/usr/bin:/usr/sbin
			prog="rngd"

			# Source function library.
			. /etc/init.d/functions

			# Allow anyone to run status
			if [ "$1" = "status" ] ; then
				status $prog
				RETVAL=$?
				exit $RETVAL
			fi

			# Check that we are root ... so non-root users stop here
			test $EUID = 0  ||  exit 4

			# Check config
			test -f /etc/sysconfig/rngd && . /etc/sysconfig/rngd

			RETVAL=0

			start(){
				test -x /sbin/rngd  || exit 5

				echo -n $"Starting $prog: "

				unset HOME MAIL USER USERNAME
				daemon $prog "$EXTRAOPTIONS"
				RETVAL=$?
				echo
				if test $RETVAL = 0 ; then
					touch /var/lock/subsys/rngd
				fi
				return $RETVAL
			}

			stop(){
				echo -n $"Stopping $prog: "
				killproc $prog
				RETVAL=$?
				echo
				rm -f /var/lock/subsys/rngd
				return $RETVAL
			}

			reload(){
				stop
				start
			}

			restart(){
				stop
				start
			}

			condrestart(){
				[ -e /var/lock/subsys/rngd ] && restart
				return 0
			}


			# See how we were called.
			case "$1" in
				start)
				start
				;;
				stop)
				stop
				;;
				restart)
				restart
				;;
				reload|force-reload)
				reload
				;;
				condrestart|try-restart)
				condrestart
				;;
				*)
				echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
				RETVAL=3
			esac

			exit $RETVAL

	* make it executable
	
			$ sudo chmod 755 /etc/init.d/rngd
			
1. create the file /etc/sysconfig/rngd, and have it use /dev/urandom as the seed

		$ echo EXTRAOPTIONS=\"-r /dev/urandom\" | sudo tee -a /etc/sysconfig/rngd

	* change permissions of the file

			$ sudo chmod 640 /etc/sysconfig/rngd

1. (re)start rngd

		$ sudo /sbin/service rngd restart

## Finishing Up
1. enable services at startup

		$ sudo /sbin/chkconfig --levels 345 postgresql on
		$ sudo /sbin/chkconfig --levels 345 named on
		$ sudo /sbin/chkconfig --levels 345 rngd on
		$ sudo /sbin/chkconfig --levels 345 httpd on
		
# This part of the documentation extends from the CentOS 5 part, and into the "General" documentation

## Configure Bind

1. create the config file /etc/named.conf

		options {

			// If there is a firewall between you and nameservers you want
			// to talk to, you may need to fix the firewall to allow multiple
			// ports to talk.  See http://www.kb.cert.org/vuls/id/800113

			// If your ISP provided one or more IP addresses for stable
			// nameservers, you probably want to use them as forwarders.
			// Uncomment the following block, and insert the addresses replacing
			// the all-0's placeholder.
			forward only;
			forwarders {
				8.8.8.8;
				8.8.4.4;
			};

			auth-nxdomain no;    # conform to RFC1035
			// listen-on-v6 { any; };
			listen-on { 127.0.0.1; };
		};

		// bypass the Google public servers
		zone "cymru.com" {
			forward only;
			type forward;
			forwarders { };
		};

		zone "zen.spamhaus.org" {
			forward only;
			type forward;
			forwarders { };
		};

		zone "dbl.spamhaus.org" {
			forward only;
			type forward;
			forwarders { };
		};

	* In the current example, the config file has a line that consists of only "...". Although this obviously represents an omission of a section of the file, if someone were to directly copy/paste, it would be an invalid config file.
	
* The rest of the instructions in the Bind configuration section are valid

## Postgres Configuration

### Performance Configuration

* Step 4

		$ sudo /sbin/sysctl -p
		
* The rest of the instructions in the Postgres configuration section are valid

## Main page

* all the rest of the documentation appears to be valid