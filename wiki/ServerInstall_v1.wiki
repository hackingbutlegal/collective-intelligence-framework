#summary the Server Installation
= Before you Begin =
 * If you've never used CIF before, *STOP RIGHT HERE*, please see ServerInstall for v0.01 which is considered stable
 * From this point on, ignore all other doc (including any client side doc), this page includes all the doc required to test v1 and it could conflict with other doc creating confusion, pain and potential alcohol abuse..

= Table of Contents =
<wiki:toc max_depth="3" />

= Preamble =
== Changes==
=== 0.01 to 0.99.01 ==
 * Moved from JSON to Google Protocol Buffers (protobuf)
 * added compression (compress-snappy)
 * enabled remote database connectivity
 * split out:
  * cif-perl (core cif messaging protocol)
  * cif-dbi-perl (core database interface)
  * cif-smrt (formally cif_feedparser)
  * cif-router (formally CIF::WebAPI)
 * turned cif-router into a driver framework (eg: REST, ZeroMQ are just plugins and can be swapped out)
 * simplified the CIF::Router api (removed severity and restriction from the api)
 * simplified the query data model, most things are now just sha1 hash lookups (with the exception of ipv4/6 addresses)
 * less "index" tables to swap in and out of memory, faster lookups, ip-addr's will follow in upcoming beta's

== Known Issues ==
  * *DO NOT USE THIS IF YOU'VE NEVER USED CIF BEFORE* please test out CIF-0.01 over at ServerInstall 
 * You *cannot run this beta on the same box as CIF 0.01*, it will break stuff, you will loose your data, you will be angry with me.
 * This *BETA* does NOT include analytics and feeds, it only pulls in data and allows you to query the data


= System Requirements =
These requirements will handle everything on the same box pretty well with the default open source data-sets. The more (bigger) data-sets you add, the more ram / disk space you'll need. The more cores you add, the more threads that can "batch out" the feed parsers (thus, resulting in faster data consumption).

These specs will handle around 10k feeds at once with minimal impact on memory usage. Past that you'll need to start doubling your specs. Virtual machine technology is great for prototyping your implementation and will give you a good baseline of what you'll need for production.

 # an x86-64bit platform
 # at-least 8GB ram
 # at-least 4 cores
 # at-least 100GB of free (after OS install) disk space, which will last you about 6-9 months.

= Prerequisites =
== Required Services ==
 # Join the [http://groups.google.com/group/ci-framework mailing list] -- we like to archive the Q & A there. When you ask questions directly, we will usually Cc our responses.
 # DiskLayout
 # PostgresInstall

== System Deps ==
=== Stable ===
=== Unstable ===
 # [ServerInstall_v1_Squeeze Debian Squeeze]
 # [ServerInstall_v1_Ubuntu Ubuntu]
 # [ServerInstall_v1_Generic From Source]

= Server =
== Disk Layout ==
 # create the index / archive table spaces if you haven't via DiskLayout already (it's OK if you don't want to use LVM, these directories can exist on your root volume if you choose, but performance will increase if these are spread out across many disks):
{{{
$ sudo mkdir /mnt/archive
$ sudo mkdir /mnt/index
$ sudo chown postgres:postgres /mnt/index
$ sudo chown postgres:postgres /mnt/archive
$ sudo chmod 770 /mnt/index
$ sudo chmod 770 /mnt/archive
}}}
== Default User ==
 # create your "cif" user/group (the configure script will default to this user "cif")
{{{
$ sudo adduser --disabled-password --gecos '' cif
}}}
== Install ==
 # the latest packages can be pulled from [http://code.google.com/p/collective-intelligence-framework/downloads/detail?name=cif-v1-b1.tar here]
{{{
$ wget http://collective-intelligence-framework.googlecode.com/files/cif-v1-b1.tar
$ tar -xvf cif-v1-b1.tar
cif-client-perl-v0.99.03-1-g0831daf.tar.gz
cif-dbi-perl-v0.99.02-5-g816d9d6.tar.gz
cif-perl-v0.99.02-1-gbe4362c.tar.gz
cif-router-perl-v0.99.02-6-ge70d175.tar.gz
cif-smrt-perl-v0.99.02-4-gebd1ac3.tar.gz
}}}
=== Core Message Protocol ===
 # cif-perl is the core protocol used to access the api (CIF::Message)
{{{
./configure
make testdeps
sudo make fixdeps
sudo make install
}}}
=== Database Interface ===
 # cif-dbi-perl is the database driver, mostly used by CIF::Router and CIF::Smrt
{{{
./configure
make testdeps
sudo make fixdeps
sudo make install
sudo make initdb
make tables
}}}
 # these types of messages are considered normal:
{{{
NOTICE:  table "archive" does not exist, skipping
}}}
=== Router ===
 # cif-router-perl provides a pluggable transport layer (Apache2, ZeroMQ) for the core protocol, it also provides read/write authorization support to the interfaces
{{{
./configure
make testdeps
sudo make fixdeps
sudo make install
}}}
=== Smrt Parser ===
 # cif-smrt-perl is the former cif_feedparser, processes feeds and active lists into IODEF
{{{
./configure
make testdeps
sudo make fixdeps
sudo make install
}}}
 # sudo in as the cif user and create a few files (work-around for an installer bug):
{{{
$ sudo su - cif
$ touch /opt/cif/etc/whitelist_domains && touch /opt/cif/etc/whitelist_infrastructure
}}}

== Configuration ==
=== Profile ===
 # log in as the cif user:
{{{
$ sudo su - cif
}}}
 # modify your local path, vi ~/.profile
{{{
if [ -d "/opt/cif/bin" ]; then
    PATH="/opt/cif/bin:$PATH"
fi
}}}
 # reload your env
{{{
$ source ~/.profile
}}}
=== Basic Configuration ===
 # log into the cif user:
{{{
$ sudo su - cif
$ vi ~/.cif
}}}
 # edit ~/.cif using this as a template:
{{{
[db]
host = 127.0.0.1
user = postgres
password =
database = cif

[router]
groups = everyone
}}}
=== APIKey ===
 # generate your initial apikey
{{{
$ cif_apikeys -u myuser@mydomain.com -a -g everyone -G everyone
userid              key                                  description guid                                 default_guid access write revoked created                     
myuser@mydomain.com 4c3b44b2-8196-4af9-a77c-afb182793544             8c864306-d21a-37b1-8705-746a786719bf true         all                  2011-10-25 11:40:58.81532+00
}}}
 # check to make sure your 'guid' has _*8c864306-d21a-37b1-8705-746a786719bf*_ in it. If it doesn't you won't be able to see all the default, public data that's permissioned to the 'everyone' group in your system
 # to list all of your apikeys:
{{{
$ cif_apikeys -l
}}}
 # cif_apikeys -h will give you an example of how to use the tool
=== Apache2 ===
 # enable the default-ssl site (debian):
{{{
$ sudo a2ensite default-ssl
$ sudo a2enmod apreq
$ sudo a2enmod ssl
}}}
 # unless you know what you're doing with virtual hosts, comment out the port-80 stuff in /etc/apache2/ports.conf
{{{
# If you just change the port or add more ports here, you will likely also
# have to change the VirtualHost statement in
# /etc/apache2/sites-enabled/000-default
# This is also true if you have upgraded from before 2.2.9-3 (i.e. from
# Debian etch). See /usr/share/doc/apache2.2-common/NEWS.Debian.gz and
# README.Debian.gz

+ #NameVirtualHost *:80
+ #Listen 80

<IfModule mod_ssl.c>
    # If you add NameVirtualHost *:443 here, you will also have to change
    # the VirtualHost statement in /etc/apache2/sites-available/default-ssl
    ...
}}}
 # configure apache2, add this line to your default-ssl site (or default if you're not using TLS)
{{{
<IfModule mod_ssl.c>
<VirtualHost _default_:443>
+      PerlRequire /opt/cif/bin/rest_api.pl
+      Include /etc/apache2/cif.conf
....
}}}
 # create your config at /etc/apache2/cif.conf, which should look like:
{{{
<Location /api>
    SetHandler perl-script
    PerlResponseHandler CIF::Router::REST
    PerlSetVar CIFRouterRESTConfig "/home/cif/.cif"
</Location>

}}}
 # add your "www-data" user (whoever apache is set to run under) to the group "cif" (/etc/group):
{{{
$ sudo adduser www-data cif
}}}
 # restart apache2
== Initial Data Load ==
 # sudo into the cif user and run the cif_crontool
{{{
$ sudo su - cif
$ cd /opt/cif
$ time ./bin/cif_crontool -d
$ time ./bin/cif_crontool -p hourly -d
}}}
 # check your database for data
{{{
$ psql -U postgres -d cif
psql> select * from archive order by id desc limit 5;
psql> select * from infrastructure order by id desc limit 5;
}}}
= Client =
== Installation ==
 # download the latest from https://github.com/collectiveintel/cif-client-perl/downloads
{{{
./configure
make testdeps
sudo make fixdeps
sudo make install
}}}
== Configuration ==
 # edit ~/.cif using this as a template:
{{{
[client]
timeout = 60
apikey = XXXXXXX

[client_rest]
host = https://localhost:443/api
verify_tls = 0

# for future use
# [client_zeromq]
# host = tcp://localhost:5555
}}}