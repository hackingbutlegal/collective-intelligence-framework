#labels Featured,Phase-Implementation
Documentation of the Current CIF-WebAPI REST API

= Generating API Keys =
{{{
$ cif_apikeys -h
Usage: perl /usr/local/bin/cif_apikeys -u joe@example.com
    -h  --help:     this meessage
    -e  --enable:   enable access to specific section (infrastructure,domains,malware,etc... default: all)
    -r  --revoke:   revoke a key
    -w  --write:    enable write access
    -a  --add:      add key
    -d  --delete:   delete key
    -k  --key:      apikey

Examples:
    $> perl /usr/local/bin/cif_apikeys -u joe@example.com
    $> perl /usr/local/bin/cif_apikeys -u joe@example.com -a
    $> perl /usr/local/bin/cif_apikeys -d -k 96818121-f1b6-482e-8851-8fb49cb2f6c0
    $> perl /usr/local/bin/cif_apikeys -u joe@example.com -e infrastructure -a
    $> perl /usr/local/bin/cif_apikeys -k 96818121-f1b6-482e-8851-8fb49cb2f6c0 -w
    $> perl /usr/local/bin/cif_apikeys -k 96818121-f1b6-482e-8851-8fb49cb2f6c0 -r
}}}

= Feed Generation =
 1. for performance reasons, feeds are aggregated via cron
 1. each feed is aggregated, compressed and base64 encoded, then inserted into a database for more efficient delivery
 1. each set of client libraries is designed to detect this encoding and transparently decode/decompress the feeds and return the results to your output without any extra setup
 1. because of this, larger feeds may take longer to decode/decompress on your client, but results in less load against the data-warehouse and the servers
 1. an example of how feeds are cached and generated as follows:
  1. high severity (default): */5 min
  1. medium severity: */15 min
  1. low severity: */60 min

= Default Feeds =
== Domain ==
 * domain/
 * domain/fastflux
 * domain/malware
 * domain/nameserver

== Infrastructure ==
 * infrastructure/
 * infrastructure/asn
 * infrastructure/botnet
 * infrastructure/malware
 * infrastructure/network
 * infrastructure/phishing
 * infrastructure/scan
 * infrastructure/spam
 * infrastructure/suspicious

== Malware ==
 * malware/

== Malicious urls ==
 * url/
 * url/botnet
 * url/malware
 * url/phishing

== Whitelists ==
These feeds are *NOT* included in their respective top-level feeds (eg: domain/ and infrastructure/)
 * domain/whitelist
 * infrastructure/whitelist

= Query Examples =
||Query||Example||       
||domain||example.com:443/api/domain/example.com?apikey=xx-xx-xx-xx||                                                                                                    
||domain||example.com:443/api/example.com?apikey=xx-xx-xx-xx||                        
||malware||example.com:443/api/malwawre/71eb3bcdb9dcc0fe4a0089db62692318?apikey=xx-xx-xx-xx||
||malware||example.com:443/api/71eb3bcdb9dcc0fe4a0089db62692318?apikey=xx-xx-xx-xx||
||url||example.com:443/api/url/246c9fa16cdc19411ace5cb43c301d2c?apikey=xx-xx-xx-xx||
||ipv4||example.com:443/api/192.168.1.1?apikey=xx-xx-xx-xx||
||ipv4-net||example.com:443/api/infrastructure/192.168.1.0/24?apikey=xx-xx-xx-xx||
||ipv4-net||example.com:443/api/192.168.1.0/24?apikey=xx-xx-xx-xx||

= *SPECIAL NOTES* =
 * url queries must be MD5 or SHA1 hashes
 * malware queries must be either MD5 or SHA1 hashes
 * the WebAPI will automatically determine the type of query (with the exception of passing an MD5 url hash, you MUST prefix it with url/$HASH). The WebAPI will determine any MD5 or SHA1 hash as a malware query.