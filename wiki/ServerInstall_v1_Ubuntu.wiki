#summary ubuntu install doc (v1)
#labels Version-1

= Introduction =
This assumes a clean install of Ubuntu 12.04 with all base system updates applied. There are some duplicates between the system wide deps and CPAN, this can be ignored. In some cases we need an upgraded version of the module and by installing the system-wide dependency first, it installs some of the other deps via that mechanism too, simplifying the install. Sometimes it's easier to get bugs fixes into CPAN faster than the more stable Debian/Ubuntu tree.

= Details =
== Dependencies Installation ==
----
 # Install the base dependencies from the Ubuntu repositories 
{{{
$ sudo aptitude install rng-tools postgresql apache2 apache2-threaded-dev gcc g++ make libexpat1-dev libapache2-mod-perl2 libclass-dbi-perl libnet-cidr-perl libossp-uuid-perl libxml-libxml-perl libxml2-dev libmodule-install-perl libapache2-request-perl libdbd-pg-perl bind9 libregexp-common-perl libxml-rss-perl libapache2-mod-gnutls libapreq2-dev rsync libunicode-string-perl libconfig-simple-perl libmodule-pluggable-perl libmime-lite-perl libfile-type-perl libtext-csv-perl libio-socket-inet6-perl libapr1-dbg libhtml-table-perl libdate-manip-perl libtry-tiny-perl libclass-accessor-perl pkg-config libnet-ssleay-perl vim libjson-xs-perl perl-modules libdigest-sha-perl libsnappy-dev libdatetime-format-dateparse-perl liblwp-protocol-https-perl libtime-hires-perl libnet-patricia-perl libnet-ssleay-perl liblog-dispatch-perl libregexp-common-net-cidr-perl libtext-table-perl libmodule-install-perl libclass-accessor-perl libdatetime-perl libencode-perl libjson-xs-perl libmime-base64-perl libhtml-table-perl libzmq-dev libzmq1 libzeromq-perl
}}}

 # Install the remaining perl dependencies from CPAN
{{{
$ sudo PERL_MM_USE_DEFAULT=1 perl -MCPAN -e 'install Net::Abuse::Utils,Linux::Cpuinfo,Google::ProtocolBuffers,Iodef::Pb::Simple,Compress::Snappy,Net::Abuse::Utils::Spamhaus,Net::DNS::Match,Snort::Rule,Parse::Range,Log::Dispatch,Net::SSLeay,ZeroMQ,Sys::MemInfo'
}}}

== System Setup ==
----
=== Resolver Config ===
 # Delete the resolveconf information entered at setup
{{{
$ sudo resolvconf -d eth0.inet
}}}
 # Add localhost information
{{{
$ sudo vim /etc/resolvconf/resolv.conf.d/base
}}}
 # add:
{{{
nameserver 127.0.0.1
}}}
 # Update resolvconf
{{{
$ sudo resolvconf -u
}}}
 # Verify resolveconf
{{{
$ cat /etc/resolv.conf
}}}
 Should look similar to:
{{{
# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 127.0.0.1
}}}
=== Default CIF user ===
----
Create your "cif" user/group (the configure script will default to this user "cif")
{{{
$ sudo adduser --disabled-password --gecos '' cif
}}}

=== CIF Router Configuration (Apache) ===
----
Some of the "CIF" values will be created later in the doc, for now just follow the config as is, don't worry about creating things like "/home/cif" etc.
 # enable the default-ssl site (debian):
{{{
$ sudo a2ensite default-ssl
$ sudo a2enmod apreq
$ sudo a2enmod ssl
}}}
 # unless you know what you're doing with virtual hosts, comment out the port-80 stuff in /etc/apache2/ports.conf
{{{
$ sudo vim /etc/apache2/ports.conf
}}}
{{{
# If you just change the port or add more ports here, you will likely also
# have to change the VirtualHost statement in
# /etc/apache2/sites-enabled/000-default
# This is also true if you have upgraded from before 2.2.9-3 (i.e. from
# Debian etch). See /usr/share/doc/apache2.2-common/NEWS.Debian.gz and
# README.Debian.gz

+ #NameVirtualHost *:80
+ #Listen 80

<IfModule mod_ssl.c>
    # If you add NameVirtualHost *:443 here, you will also have to change
    # the VirtualHost statement in /etc/apache2/sites-available/default-ssl
    ...
}}}
 # configure apache2, add this line to your default-ssl site (or default if you're not using TLS)
{{{
<IfModule mod_ssl.c>
<VirtualHost _default_:443>
+      PerlRequire /opt/cif/bin/http_api.pl
+      Include /etc/apache2/cif.conf
....
}}}
 # create your config at /etc/apache2/cif.conf, which should look like:
{{{
<Location /api>
    SetHandler perl-script
    PerlResponseHandler CIF::Router::HTTP
    PerlSetVar CIFRouterConfig "/home/cif/.cif"
</Location>

}}}
 # add your "www-data" user (whoever apache is set to run under) to the group "cif" (/etc/group):
{{{
$ sudo adduser www-data cif
}}}

== Continue ==
----
Continue with [ServerInstall_v1_RC2#BindSetup_v1 Nameserver configuration]