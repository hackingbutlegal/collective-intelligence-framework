#summary CentOS6 libcif-dbi install doc (v1)

= Introduction =
This doc provides for the installation of a remote database client (eg: the router, or an apikeys interface manager). This doc assumes:
 * a clean install of CentOS6 with sudo and all base system updates applied.
 * the database instance (physical data) is located on a different set of resources

* Table of Contents *
<wiki:toc max_depth="3" />

= Details =
== Caveats ==
== Dependencies Installation ==
----
 # install the [ClientInstall_v1 client]
 # install the dependencies (as root)
{{{
$ yum -y install postgresql
}}}
== System Setup ==
-----
=== Default CIF user ===
----
 # create your "cif" user/group (the configure script will default to this user "cif")
{{{
$ sudo adduser cif
}}}
 # change the default home permissions
{{{
$ sudo chmod 770 /home/cif
}}}

=== Install Library ===
 # download the latest libcif-dbi [http://code.google.com/p/collective-intelligence-framework/downloads/list?q=label:v1+libcifdbi package]
{{{
$ tar -xzvf libcif-v1-XXX.tar.gz
$ cd libcif-dbi-v1-XXX
$ ./configure && make testdeps
$ sudo make install
}}}
== Examples ==
-----
=== Configs ===
the application user must have a a cif config it can read, for example if it's a web application, a /etc/apache/mycif.conf could be created with the following:
{{{
[db]
host = 127.0.0.1
user = postgres
password =
database = cif
}}}
=== Paths ===
In order for an application to leverage the CIF libraries, the '/opt/cif/lib' path must be added to the application.
{{{
#!/usr/bin/perl

use strict;

# fix lib paths
BEGIN {
        unshift @INC, "/opt/cif/lib";
}

my ($err,$ret) = CIF::Profile->new({
    config  => '/etc/apache/mycif.conf',
});
die($err) if($err);
my $profile = $ret;
...
}}}