<%ARGS>
@recs => undef
</%ARGS>
<%INIT>
use JSON;
use XML::Malware;
use DateTime::Format::DateParse;

my @a;

foreach my $r (@recs){
    my $h;
    $h->{'company'}     = $r->source();
    $h->{'author'}      = $r->source();
    $h->{'comment'}     = $r->description();
    $h->{'timestamp'}   = $r->detecttime() || $r->created();
    $h->{'id'}          = $r->hash_md5() || $r->hash_sha1() || '';

    $h->{'timestamp'}   = DateTime::Format::DateParse->parse_datetime($h->{'timestamp'});
    $h->{'timestamp'}   .= 'Z';

    push(@{$h->{'objects'}->{'file'}}, { id => $r->hash_md5() || $r->hash_sha1(), md5 => $r->hash_md5(), sha1 => $r->hash_sha1 });
    push(@{$h->{'objects'}->{'classification'}}, { id => '', companyName => $r->source, type => 'dirty', classificationName => $r->impact});
    my $icsg = XML::Malware->new($h);

    my $x = {
        'hash_md5'      => $r->hash_md5()       || 'NA',
        'hash_sha1'     => $r->hash_sha1()      || 'NA',
        'impact'        => $r->impact()         || 'NA',   
        'description'   => $r->description()    || 'NA',
        'confidence'    => $r->confidence()     || 'NA',
        'severity'      => $r->severity()       || 'NA',
        'restriction'   => $r->restriction()    || 'private',
        'detecttime'    => $r->detecttime()     || 'NA',
        'created'       => $r->created()        || 'NA',
        'reference'     => RT->Config->Get("rtname").'/REST/1.0/cif/uuid/'.$r->uuid(),
        'icsg'          => $icsg->out(), 
    };
    push(@a,$x);
}

my $str = encode_json(\@a);
return $str;
</%INIT>
