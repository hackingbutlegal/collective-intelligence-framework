#!/usr/bin/perl -w

use strict;
use LWP::Simple;
use Data::Dumper;
use Net::Abuse::Utils qw(:all);
use Regexp::Common qw/net/;
use DateTime;

use CIF::Message::Infrastructure;
use CIF::Message::InetWhitelist;
use CIF::Message::Inet;

my $partner = 'zeustracker.abuse.ch';
my $url = 'https://zeustracker.abuse.ch/blocklist.php?download=ipblocklist';

my $content = get($url);

my @lines = split(/\n/,$content);
foreach (@lines){
    next if(/^(#|$)/);
    my $address = $_;

    next if(CIF::Message::Inet::isPrivateAddress($address) || CIF::Message::InetWhitelist::isWhitelisted($address));

    my $detecttime = DateTime->from_epoch(epoch => time());
    $detecttime = $detecttime->ymd().'T00:00:00Z';

    my ($as,$as_desc,$network,$ccode,$rir,$dt);
    ($as,$network,$ccode,$rir,$dt) = get_asn_info($address);
    $as_desc = get_as_description($as) if($as);

    $as         = undef if($as && $as eq 'NA');
    $network    = undef if($network && $network eq 'NA');
    $ccode      = undef if($ccode && $ccode eq 'NA');
    $rir        = undef if($rir && $rir eq 'NA');
    $dt         = undef if($dt && $dt eq 'NA');
    $as_desc    = undef if($as_desc && $as_desc eq 'NA');
        
    my $impact = 'botnet infrastructure zeus';
            
    my $u = CIF::Message::Infrastructure->insert({
        source      => $partner,
        address     => $address,
        impact      => $impact,
        description => $impact.' - '.$address,
        confidence  => 5,
        severity    => 'medium',
        detecttime  => $detecttime,
        asn         => $as,
        asn_desc    => $as_desc,
        cidr        => $network,
        cc          => $ccode,
        rir         => $rir,
        restriction => 'need-to-know',
        alternativeid => 'https://zeustracker.abuse.ch/monitor.php?ipaddress='.$address,
        alternativeid_restriction => 'public',
    });
    warn $u;
}
