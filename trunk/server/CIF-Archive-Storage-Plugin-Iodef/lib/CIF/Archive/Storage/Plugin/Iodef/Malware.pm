package CIF::Archive::Storage::Plugin::Iodef::Malware;

require XML::Malware;

sub prepare {
    my $class   = shift;
    my $info    = shift;

    return unless($info->{'impact'});
    return(undef) unless($info->{'impact'} eq 'malware');
    my $hash = $info->{'malware_md5'} || $info->{'malware_sha1'};
    $hash = lc($hash);
    return(undef) unless($hash && $hash =~ /^[a-f0-9]{32,40}$/);
    return(1);
}

sub from {
    my $self = shift;
    my $hash = shift;

    return unless($hash->{'IncidentEventDataRecordRecordDataRecordItem'});
    my @recs = @{$h->{'IncidentEventDataRecordRecordDataRecordItem'}};
    my @types = @{$h->{'IncidentEventDataRecordRecordDataRecordItemformatid'}};
    my %m = map { $types[$_],$recs[$_] } (0 ... $#types);
    return unless(exists($m{'icsg1.1'}));
    my $str = $m{'icsg1.1'};
    my $mm = XML::Malware->new();
    my $h2 = XML::Malware->in($str) || return;
    return($h2);
}

sub data_hash_simple {
    my $class = shift;
    my $hash = shift;
    return;

    $hash = $class->data_hash($hash);
    my $r = $hash->{'EventData'}->{'Record'}->{'RecordData'}->{'RecordItem'};
    my @recs;
    if(ref($r) eq 'HASH'){
        push(@recs,$r);
    } else {
        @recs = @{$r};
    }
    foreach(@recs){
        next unless($_->{'formatid'} eq 'icsg1.1');
        $_ = $_->{'content'};
        my $md5 = $_->{'objects'}->{'file'}[0]->{'md5'};
        my $sha1 = $_->{'objects'}->{'file'}[0]->{'sha1'};
        return({
            malware_md5 => $md5,
            malware_sha1    => $sha1,
        });
    }
}

sub data_hash {
    my $class = shift;
    my $hash = shift;
    my $h = $hash->{'EventData'}->{'Record'}->{'RecordData'}->{'RecordItem'};
    my @recs;
    if(ref($h) eq 'HASH'){
        push(@recs,$h);
    } else {
        @recs = @{$h};
    }
    foreach(@recs){
        next unless($_->{'formatid'} eq 'icsg1.1');
        my $str = $_->{'content'};
        my $m = XML::Malware->new();
        $m->in($str);
        if($m->{'_hash'}){
            $_->{'content'} = $m->{'_hash'};
        }
    }
    return($hash);
}

sub convert {
    my $self = shift;
    my $info = shift;
    my $iodef = shift;
    
    return($iodef) unless($info->{'malware_md5'} || $info->{'malware_sha1'});

    if($info->{'malware_md5'}){
        $iodef->add('IncidentEventDataAdditionalDatadtype','string');
        $iodef->add('IncidentEventDataAdditionalDatameaning','malware_md5');
        $iodef->add('IncidentEventDataAdditionalData',$info->{'malware_md5'});
    }
    if($info->{'malware_sha1'}){
        $iodef->add('IncidentEventDataAdditionalDatadtype','string');
        $iodef->add('IncidentEventDataAdditionalDatameaning','malware_sha1');
        $iodef->add('IncidentEventDataAdditionalData',$info->{'malware_sha1'});
    }

    return $iodef;
}

1;
